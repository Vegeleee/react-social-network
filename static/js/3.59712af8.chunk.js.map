{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/AddMessageForm/AddMessageForm.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","id","name","path","className","classes","dialog","to","activeClassName","active","Message","message","messageText","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","formField","createField","Textarea","Dialogs","dialogsPage","sendMessage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","dialogsMessages","formData","newMessage","compose","connect","state","actions","withAuthRedirect"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,gBAAkB,mC,oBCApHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,KAAO,6BAA6B,UAAY,oC,wHCenDC,EAZyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACxCC,EAAI,mBAAeF,GAEzB,OACC,yBAAKG,UAAWC,IAAQC,QACvB,kBAAC,IAAD,CAASC,GAAIJ,EAAMK,gBAAiBH,IAAQI,QAC1CP,K,kBCCUQ,EARsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvC,OACC,yBAAKP,UAAWC,IAAQM,SACvB,0BAAMP,UAAWC,IAAQO,aAAcD,K,2CCApCE,EAAYC,YAAiB,IA2BpBC,EAJaC,YAAyC,CACpEC,KAAM,wBADqBD,EAnBxB,SAACE,GACJ,OACC,0BAAMC,SAAUD,EAAME,aAAchB,UAAWC,IAAQY,MACtD,yBAAKb,UAAWC,IAAQgB,WACtBC,YACA,qBACA,aACA,CAACT,GACDU,IACA,KAGF,6BACC,6CCYWC,EA1BsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC9CC,EAAkBF,EAAYG,QAAQC,KAAI,SAACC,GAAD,OAC/C,kBAAC,EAAD,CAAY5B,KAAM4B,EAAE5B,KAAM6B,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QAGtC+B,EAAmBP,EAAYQ,SAASJ,KAAI,SAACK,GAAD,OACjD,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEjC,GAAIA,GAAIiC,EAAEjC,QAO/C,OACC,yBAAKG,UAAWC,IAAQuB,SACvB,yBAAKxB,UAAWC,IAAQ8B,cAAeR,GACvC,yBAAKvB,UAAWC,IAAQ+B,iBACvB,6BAAMJ,GACN,6BACC,kBAAC,EAAD,CAAqBb,SAVH,SAACkB,GACtBX,EAAYW,EAASC,mB,uBCRRC,sBACdC,aALuB,SAACC,GAAD,MAA6C,CACpEhB,YAAagB,EAAMhB,eAIZ,eAEDiB,MAENC,IALcJ,CAMbf","file":"static/js/3.59712af8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"dialogsMessages\":\"Dialogs_dialogsMessages__1vjY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3yh_M\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\",\"messageText\":\"Message_messageText__Zx3yU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddMessageForm_form__1Sv6M\",\"formField\":\"AddMessageForm_formField__10FeY\"};","import React from 'react'\nimport classes from './DialogItem.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nconst DialogItem: React.FC<PropsType> = ({ id, name }) => {\n\tconst path = `/dialogs/${id}`\n\n\treturn (\n\t\t<div className={classes.dialog}>\n\t\t\t<NavLink to={path} activeClassName={classes.active}>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default DialogItem\n\ntype PropsType = {\n\tid: number\n\tname: string\n}\n","import React from 'react'\nimport classes from './Message.module.scss'\n\nconst Message: React.FC<PropsType> = ({ message }) => {\n\treturn (\n\t\t<div className={classes.message}>\n\t\t\t<span className={classes.messageText}>{message}</span>\n\t\t</div>\n\t)\n}\n\nexport default Message\n\ntype PropsType = {\n\tid: number\n\tmessage: string\n}\n","import React from 'react'\nimport { reduxForm, InjectedFormProps } from 'redux-form'\nimport { Textarea, createField } from '../../common/FormsControls/FormsControls'\nimport { maxLengthCreator } from '../../../utils/validators/validators'\nimport classes from './AddMessageForm.module.scss'\n\nconst maxLength = maxLengthCreator(50)\n\nconst AddMessageForm: React.FC<\n\tInjectedFormProps<NewMessageFormType, PropsType> & PropsType\n> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={classes.form}>\n\t\t\t<div className={classes.formField}>\n\t\t\t\t{createField<NewMessageKeysType>(\n\t\t\t\t\t'Enter your message',\n\t\t\t\t\t'newMessage',\n\t\t\t\t\t[maxLength],\n\t\t\t\t\tTextarea,\n\t\t\t\t\t{}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Send</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst AddMessageReduxForm = reduxForm<NewMessageFormType, PropsType>({\n\tform: 'dialogAddMessageForm',\n})(AddMessageForm)\n\nexport default AddMessageReduxForm\n\ntype NewMessageKeysType = Extract<keyof NewMessageFormType, string>\ntype PropsType = {}\nexport type NewMessageFormType = {\n\tnewMessage: string\n}\n","import React from 'react'\nimport classes from './Dialogs.module.scss'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport AddMessageReduxForm, {\n\tNewMessageFormType,\n} from './AddMessageForm/AddMessageForm'\nimport { DialogsInitialStateType } from '../../redux/dialogs-reducer'\n\nconst Dialogs: React.FC<PropsType> = ({ dialogsPage, sendMessage }) => {\n\tconst dialogsElements = dialogsPage.dialogs.map((d) => (\n\t\t<DialogItem name={d.name} key={d.id} id={d.id} />\n\t))\n\n\tconst messagesElements = dialogsPage.messages.map((m) => (\n\t\t<Message message={m.message} key={m.id} id={m.id} />\n\t))\n\n\tconst addNewMessage = (formData: NewMessageFormType) => {\n\t\tsendMessage(formData.newMessage)\n\t}\n\n\treturn (\n\t\t<div className={classes.dialogs}>\n\t\t\t<div className={classes.dialogsItems}>{dialogsElements}</div>\n\t\t\t<div className={classes.dialogsMessages}>\n\t\t\t\t<div>{messagesElements}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<AddMessageReduxForm onSubmit={addNewMessage} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs\n\ntype PropsType = {\n\tdialogsPage: DialogsInitialStateType\n\tsendMessage: (message: string) => void\n}\n","import { DialogsInitialStateType, actions } from '../../redux/dialogs-reducer'\nimport Dialogs from './Dialogs'\nimport { connect } from 'react-redux'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\nimport { AppStateType } from '../../redux/store'\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tdialogsPage: state.dialogsPage,\n})\n\nexport default compose<React.ComponentType>(\n\tconnect<MapStatePropsType, MapDispatchPropsType, null, AppStateType>(\n\t\tmapStateToProps,\n\t\t{ ...actions }\n\t),\n\twithAuthRedirect\n)(Dialogs)\n\ntype MapStatePropsType = {\n\tdialogsPage: DialogsInitialStateType\n}\ntype MapDispatchPropsType = {\n\tsendMessage: (message: string) => void\n}\n"],"sourceRoot":""}