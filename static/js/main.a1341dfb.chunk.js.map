{"version":3,"sources":["components/common/FormsControls/FormsControls.tsx","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","redux/dialogs-reducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.module.scss","components/Profile/ProfileInfo/ProfileStatus.module.scss","components/Navbar/Navbar.module.scss","serviceWorker.ts","api/api.ts","components/Navbar/Navbar.tsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/users-api.ts","utils/objectHelpers.ts","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/common/Preloader/Preloader.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","api/profile-api.ts","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","api/security-api.ts","api/auth-api.ts","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.module.scss","components/Users/User.module.scss","assets/images/user.png","utils/validators/validators.ts","components/common/Paginator/Paginator.module.scss","components/Login/Login.module.scss","components/Header/Header.module.scss","hoc/withAuthRedirect.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Users/Users.module.scss"],"names":["FormControl","meta","children","hasError","error","touched","className","classes","formControl","errorText","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","initialState","dialogs","id","messages","message","actions","sendMessage","newMessage","type","dialogsReducer","state","action","length","Boolean","window","location","hostname","match","ResultCodes","ResultCodeForCaptcha","Navbar","nav","navList","navListItem","to","activeClassName","active","News","Music","Settings","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","item","users","totalUsersCount","isFetching","followingInProgress","_followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Success","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","paginatorPrevButton","p","key","cn","paginatorPageNumber","paginatorSelectedPage","paginatorNextButton","User","user","userPhoto","src","photos","small","alt","userFollowButton","disabled","some","userInfo","userInfoName","status","userLocation","Preloader","preloader","Users","usersContainer","usersWrapper","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","Component","compose","connect","bind","page","totalCount","withAuthRedirect","ProfileStatus","editMode","setEditMode","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","target","value","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","onSubmit","profileData","style","formSummaryError","profileDataItem","Object","keys","contacts","contact","ProfileData","toEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","preloadWrapper","descBlock","descBlockLeftCol","large","mainPhoto","files","descBlockRightCol","head","fullName","initialValues","formData","profileAPI","put","photo","FormData","append","posts","likesCount","newPostText","setUserProfile","savePhotoSuccess","addPost","getProfile","profileReducer","newPost","Post","wrapper","likes","maxLength","maxLengthCreator","NewPostReduxForm","MyPosts","memo","postsElements","postsBlock","profilePage","Profile","MyPostsContainer","ProfileContainer","params","authorizedUserId","getStatus","refreshProfile","prevProps","auth","isAuth","getState","stopSubmit","slice","toLowerCase","Promise","reject","withRouter","Header","login","logout","header","logo","loginBlock","securityAPI","authAPI","email","password","rememberMe","captcha","captchaUrl","payload","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","loginForm","required","undefined","loginFormButton","CaptchaIsRequired","_error","loginContainer","loginTitle","initialized","appReducer","rootReducer","combineReducers","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","SuspendedDialogs","fallback","lazy","App","catchAllUnhandledErrors","alert","initializeApp","addEventListener","removeEventListener","exact","from","path","render","AppWithRouter","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","mapStateToProps"],"mappings":"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","file":"static/js/main.a1341dfb.chunk.js","sourcesContent":["import { FieldValidatorType } from '../../../utils/validators/validators'\nimport React from 'react'\nimport classes from './FormsControls.module.scss'\nimport { Field, WrappedFieldProps, WrappedFieldMetaProps } from 'redux-form'\n\nconst FormControl: React.FC<FormControlPropsType> = ({ meta, children }) => {\n\tconst hasError = meta.error && meta.touched\n\n\treturn (\n\t\t<div className={`${classes.formControl} ${hasError ? classes.error : ''}`}>\n\t\t\t<div>{children}</div>\n\t\t\t{hasError && <div className={classes.errorText}>{meta.error}</div>}\n\t\t</div>\n\t)\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n\tconst { input, ...restProps } = props\n\treturn (\n\t\t<FormControl {...restProps}>\n\t\t\t<textarea {...input} {...restProps} />\n\t\t</FormControl>\n\t)\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n\tconst { input, ...restProps } = props\n\treturn (\n\t\t<FormControl {...restProps}>\n\t\t\t<input {...input} {...restProps} />\n\t\t</FormControl>\n\t)\n}\n\nexport function createField<FormKeysType extends string>(\n\tplaceholder: string | undefined,\n\tname: FormKeysType,\n\tvalidators: Array<FieldValidatorType>,\n\tcomponent: React.FC<WrappedFieldProps>,\n\tprops = {},\n\ttext = ''\n) {\n\treturn (\n\t\t<div>\n\t\t\t<Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} /> {text}\n\t\t</div>\n\t)\n}\n\ntype FormControlPropsType = {\n\tmeta: WrappedFieldMetaProps\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cAL4\",\"posts\":\"MyPosts_posts__1P0sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloadWrapper\":\"ProfileInfo_preloadWrapper__O7As_\",\"descBlock\":\"ProfileInfo_descBlock__2HhTR\",\"descBlockLeftCol\":\"ProfileInfo_descBlockLeftCol__2beiZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__E2WaB\",\"descBlockRightCol\":\"ProfileInfo_descBlockRightCol__2CWh2\",\"head\":\"ProfileInfo_head__2L527\",\"name\":\"ProfileInfo_name__BDBmC\",\"profileDataItem\":\"ProfileInfo_profileDataItem__2f1zQ\",\"profileData\":\"ProfileInfo_profileData__12mUh\",\"contact\":\"ProfileInfo_contact__te2Ea\"};","import { InferActionTypes } from './store'\n\ntype DialogType = {\n\tid: number\n\tname: string\n}\n\ntype MessageType = {\n\tid: number\n\tmessage: string\n}\n\nconst initialState = {\n\tdialogs: [\n\t\t{ id: 1, name: 'Danil' },\n\t\t{ id: 2, name: 'Slava' },\n\t\t{ id: 3, name: 'Maria' },\n\t\t{ id: 4, name: 'Sasha' },\n\t\t{ id: 5, name: 'Aleksey' },\n\t\t{ id: 6, name: 'Vlad' },\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{ id: 1, message: 'Hi' },\n\t\t{ id: 2, message: 'How are you' },\n\t\t{ id: 3, message: 'Yo!' },\n\t\t{ id: 4, message: 'Yo!' },\n\t\t{ id: 5, message: 'Yo!' },\n\t] as Array<MessageType>,\n}\n\nconst dialogsReducer = (\n\tstate = initialState,\n\taction: ActionsTypes\n): DialogsInitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'dialogs/SEND-MESSAGE':\n\t\t\tconst newMessage = {\n\t\t\t\tid: state.messages.length + 1,\n\t\t\t\tmessage: action.newMessage,\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, newMessage],\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actions = {\n\tsendMessage: (newMessage: string) =>\n\t\t({\n\t\t\ttype: 'dialogs/SEND-MESSAGE',\n\t\t\tnewMessage,\n\t\t} as const),\n}\n\nexport default dialogsReducer\n\nexport type DialogsInitialStateType = typeof initialState\ntype ActionsTypes = InferActionTypes<typeof actions>\n","module.exports = __webpack_public_path__ + \"static/media/preloader.213e51e2.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__CNKtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__Y_Mn_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"navList\":\"Navbar_navList__2hxWr\",\"navListItem\":\"Navbar_navListItem__2E7VC\",\"active\":\"Navbar_active__21R_N\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.')\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import { UserType } from './../types/types'\nimport Axios from 'axios'\n\nexport const instance = Axios.create({\n\twithCredentials: true,\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\theaders: {\n\t\t'API-KEY': '84eace83-6993-4047-89dd-082bc11cda1c',\n\t},\n})\n\nexport enum ResultCodes {\n\tSuccess = 0,\n\tError = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n\tCaptchaIsRequired = 10,\n}\n\nexport type GetItemsType = {\n\titems: Array<UserType>\n\ttotalCount: number\n\terror: null | string\n}\n\nexport type APIResponseType<D = {}, RC = ResultCodes> = {\n\tdata: D\n\tresultCode: RC\n\tmessages: Array<string>\n}\n","import React from 'react'\nimport classes from './Navbar.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nconst Navbar: React.FC = () => {\n\treturn (\n\t\t<nav className={classes.nav}>\n\t\t\t<ul className={classes.navList}>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/profile\" activeClassName={classes.active}>\n\t\t\t\t\t\tProfile\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/dialogs\" activeClassName={classes.active}>\n\t\t\t\t\t\tMessages\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/users\" activeClassName={classes.active}>\n\t\t\t\t\t\tUsers\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/news\" activeClassName={classes.active}>\n\t\t\t\t\t\tNews\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/music\" activeClassName={classes.active}>\n\t\t\t\t\t\tMusic\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className={classes.navListItem}>\n\t\t\t\t\t<NavLink to=\"/settings\" activeClassName={classes.active}>\n\t\t\t\t\t\tSettings\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar\n","import React from 'react'\n// import classes from './News.module.css'\n\nconst News = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tNews\n\t\t</div>\n\t)\n}\n\nexport default News","import React from 'react'\n// import classes from './Music.module.css'\n\nconst Music = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tMusic\n\t\t</div>\n\t)\n}\n\nexport default Music","import React from 'react'\n// import classes from './Settings.module.css'\n\nconst Settings = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tSettings\n\t\t</div>\n\t)\n}\n\nexport default Settings","import { instance, GetItemsType, APIResponseType } from './api'\n\nexport const usersAPI = {\n\tgetUsers(currentPage = 1, pageSize = 10) {\n\t\treturn instance\n\t\t\t.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then((response) => response.data)\n\t},\n\n\tfollow(userId: number) {\n\t\treturn instance\n\t\t\t.post<APIResponseType>(`follow/${userId}`)\n\t\t\t.then((response) => response.data)\n\t},\n\n\tunfollow(userId: number) {\n\t\treturn instance\n\t\t\t.delete<APIResponseType>(`follow/${userId}`)\n\t\t\t.then((response) => response.data)\n\t},\n}\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjectProps: any) => {\n\treturn items.map((item: any) => {\n\t\tif (item[objPropName] === itemId) {\n\t\t\treturn { ...item, ...newObjectProps }\n\t\t}\n\n\t\treturn item\n\t})\n}\n","import { usersAPI } from './../api/users-api'\nimport { InferActionTypes, BaseThunkType } from './store'\nimport { ResultCodes } from '../api/api'\nimport { updateObjectInArray } from '../utils/objectHelpers'\nimport { UserType } from '../types/types'\nimport { Dispatch } from 'redux'\n\nconst initialState = {\n\tusers: [] as Array<UserType>,\n\tpageSize: 12,\n\ttotalUsersCount: 0,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: [] as Array<number>, // array of users ids\n}\n\nconst usersReducer = (\n\tstate = initialState,\n\taction: ActionsTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'users/FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {\n\t\t\t\t\tfollowed: true,\n\t\t\t\t}),\n\t\t\t}\n\n\t\tcase 'users/UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {\n\t\t\t\t\tfollowed: false,\n\t\t\t\t}),\n\t\t\t}\n\n\t\tcase 'users/SET_USERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.users,\n\t\t\t}\n\n\t\tcase 'users/SET_CURRENT_PAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.currentPage,\n\t\t\t}\n\n\t\tcase 'users/SET_TOTAL_USERS_COUNT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttotalUsersCount: action.totalUsersCount,\n\t\t\t}\n\n\t\tcase 'users/TOGGLE_IS_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.isFetching,\n\t\t\t}\n\n\t\tcase 'users/TOGGLE_FOLLOWING_PROGRESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter((id) => id !== action.userId),\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actions = {\n\tfollowSuccess: (userId: number) =>\n\t\t({ type: 'users/FOLLOW', userId } as const),\n\tunfollowSuccess: (userId: number) =>\n\t\t({ type: 'users/UNFOLLOW', userId } as const),\n\tsetUsers: (users: Array<UserType>) =>\n\t\t({ type: 'users/SET_USERS', users } as const),\n\tsetCurrentPage: (currentPage: number) =>\n\t\t({ type: 'users/SET_CURRENT_PAGE', currentPage } as const),\n\tsetTotalUsersCount: (totalUsersCount: number) =>\n\t\t({ type: 'users/SET_TOTAL_USERS_COUNT', totalUsersCount } as const),\n\ttoggleIsFetching: (isFetching: boolean) =>\n\t\t({ type: 'users/TOGGLE_IS_FETCHING', isFetching } as const),\n\ttoggleFollowingProgress: (isFetching: boolean, userId: number) =>\n\t\t({ type: 'users/TOGGLE_FOLLOWING_PROGRESS', isFetching, userId } as const),\n}\n\nexport const requestUsers = (\n\tpage: number,\n\tpageSize: number\n): ThunkType => async (dispatch) => {\n\tdispatch(actions.toggleIsFetching(true))\n\tdispatch(actions.setCurrentPage(page))\n\n\tconst data = await usersAPI.getUsers(page, pageSize)\n\tdispatch(actions.toggleIsFetching(false))\n\tdispatch(actions.setUsers(data.items))\n\tdispatch(actions.setTotalUsersCount(data.totalCount))\n}\n\nconst _followUnfollowFlow = async (\n\tdispatch: Dispatch<ActionsTypes>,\n\tuserId: number,\n\tapiMethod: any,\n\tactionCreator: (userId: number) => ActionsTypes\n) => {\n\tdispatch(actions.toggleFollowingProgress(true, userId))\n\n\tconst data = await apiMethod(userId)\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tdispatch(actionCreator(userId))\n\t}\n\tdispatch(actions.toggleFollowingProgress(false, userId))\n}\n\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\n\t_followUnfollowFlow(\n\t\tdispatch,\n\t\tuserId,\n\t\tusersAPI.follow.bind(usersAPI),\n\t\tactions.followSuccess\n\t)\n}\n\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\n\t_followUnfollowFlow(\n\t\tdispatch,\n\t\tuserId,\n\t\tusersAPI.unfollow.bind(usersAPI),\n\t\tactions.unfollowSuccess\n\t)\n}\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { useState } from 'react'\nimport classes from './Paginator.module.scss'\nimport cn from 'classnames'\n\nconst Paginator: React.FC<PropsType> = ({\n\ttotalItemsCount,\n\tpageSize,\n\tcurrentPage,\n\tonPageChanged,\n\tportionSize = 10,\n}) => {\n\tconst pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n\tconst pages: Array<number> = []\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tconst portionCount = Math.ceil(pagesCount / portionSize)\n\tconst [portionNumber, setPortionNumber] = useState(1)\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n\tconst rightPortionPageNumber = portionNumber * portionSize\n\n\treturn (\n\t\t<div className={classes.paginator}>\n\t\t\t{portionNumber > 1 && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetPortionNumber(portionNumber - 1)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={classes.paginatorPrevButton}\n\t\t\t\t>\n\t\t\t\t\tPrev\n\t\t\t\t</button>\n\t\t\t)}\n\n\t\t\t{pages\n\t\t\t\t.filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n\t\t\t\t.map((p) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={p}\n\t\t\t\t\t\tclassName={cn(classes.paginatorPageNumber, {\n\t\t\t\t\t\t\t[classes.paginatorSelectedPage]: currentPage === p,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonPageChanged(p)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{p}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\n\t\t\t{portionCount > portionNumber && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetPortionNumber(portionNumber + 1)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={classes.paginatorNextButton}\n\t\t\t\t>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Paginator\n\ntype PropsType = {\n\ttotalItemsCount: number\n\tpageSize: number\n\tcurrentPage: number\n\tonPageChanged: (pageNumber: number) => void\n\tportionSize?: number\n}\n","import React from 'react'\nimport userPhoto from '../../assets/images/user.png'\nimport classes from './User.module.scss'\nimport { NavLink } from 'react-router-dom'\nimport { UserType } from '../../types/types'\n\nconst User: React.FC<PropsType> = ({\n\tuser,\n\tfollow,\n\tunfollow,\n\tfollowingInProgress,\n}) => {\n\treturn (\n\t\t<div className={classes.user}>\n\t\t\t<div>\n\t\t\t\t<div className={classes.userPhoto}>\n\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={user.photos.small ? user.photos.small : userPhoto}\n\t\t\t\t\t\t\talt=\"User\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.userFollowButton}>\n\t\t\t\t\t{user.followed ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={followingInProgress.some((id) => id === user.id)}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tunfollow(user.id)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUnfollow\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={followingInProgress.some((id) => id === user.id)}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tfollow(user.id)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.userInfo}>\n\t\t\t\t<div className={classes.userInfoName}>{user.name}</div>\n\t\t\t\t<div>{user.status}</div>\n\t\t\t</div>\n\t\t\t<div className={classes.userLocation}>\n\t\t\t\t<div>{'user.location.country'}</div>\n\t\t\t\t<div>{'user.location.city'}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default User\n\ntype PropsType = {\n\tuser: UserType\n\tfollow: (userId: number) => void\n\tunfollow: (userId: number) => void\n\tfollowingInProgress: Array<number>\n}\n","import React from 'react'\nimport preloader from '../../../assets/images/preloader.gif'\nimport classes from './Preloader.module.scss'\n\nconst Preloader: React.FC = () => {\n\treturn (\n\t\t<div className={classes.preloader}>\n\t\t\t<img src={preloader} alt=\"Preloader\" />\n\t\t</div>\n\t)\n}\n\nexport default Preloader\n","import React from 'react'\nimport classes from './Users.module.scss'\nimport Paginator from '../common/Paginator/Paginator'\nimport User from './User'\nimport { UserType } from '../../types/types'\nimport Preloader from '../common/Preloader/Preloader'\n\nconst Users: React.FC<PropsType> = ({\n\ttotalUsersCount,\n\tpageSize,\n\tcurrentPage,\n\tusers,\n\tisFetching,\n\tfollow,\n\tunfollow,\n\tonPageChanged,\n\tfollowingInProgress,\n}) => {\n\treturn (\n\t\t<div className={classes.usersContainer}>\n\t\t\t<Paginator\n\t\t\t\ttotalItemsCount={totalUsersCount}\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tonPageChanged={onPageChanged}\n\t\t\t/>\n\t\t\t{isFetching ? (\n\t\t\t\t<Preloader />\n\t\t\t) : (\n\t\t\t\t<div className={classes.usersWrapper}>\n\t\t\t\t\t{users.map((u) => (\n\t\t\t\t\t\t<User key={u.id} user={u} follow={follow} unfollow={unfollow} followingInProgress={followingInProgress} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Users\n\ntype PropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\tusers: Array<UserType>\n\tisFetching: boolean\n\tfollow: (userId: number) => void\n\tunfollow: (userId: number) => void\n\tonPageChanged: (pageNumber: number) => void\n\tfollowingInProgress: Array<number>\n}\n","import { AppStateType } from './store'\n\nexport const getUsers = (state: AppStateType) => {\n\treturn state.usersPage.users;\n};\n\nexport const getPageSize = (state: AppStateType) => {\n\treturn state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n\treturn state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state: AppStateType) => {\n\treturn state.usersPage.currentPage;\n};\n\nexport const getIsFetching = (state: AppStateType) => {\n\treturn state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n\treturn state.usersPage.followingInProgress;\n};","import React from 'react'\nimport { connect } from 'react-redux'\nimport { follow, unfollow, requestUsers } from '../../redux/users-reducer'\nimport Users from './Users'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\nimport {\n\tgetUsers,\n\tgetPageSize,\n\tgetTotalUsersCount,\n\tgetCurrentPage,\n\tgetIsFetching,\n\tgetFollowingInProgress,\n} from '../../redux/users-selectors'\nimport { UserType } from '../../types/types'\nimport { AppStateType } from '../../redux/store'\n\nclass UsersContainer extends React.Component<PropsType> {\n\tcomponentDidMount() {\n\t\tconst { requestUsers, currentPage, pageSize } = this.props\n\t\trequestUsers(currentPage, pageSize)\n\t}\n\n\tonPageChanged = (pageNumber: number) => {\n\t\tconst { requestUsers, pageSize } = this.props\n\t\trequestUsers(pageNumber, pageSize)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Users\n\t\t\t\t\ttotalUsersCount={this.props.totalUsersCount}\n\t\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\t\tusers={this.props.users}\n\t\t\t\t\tisFetching={this.props.isFetching}\n\t\t\t\t\tfollow={this.props.follow}\n\t\t\t\t\tunfollow={this.props.unfollow}\n\t\t\t\t\tonPageChanged={this.onPageChanged}\n\t\t\t\t\tfollowingInProgress={this.props.followingInProgress}\n\t\t\t\t/>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tusers: getUsers(state),\n\tpageSize: getPageSize(state),\n\ttotalUsersCount: getTotalUsersCount(state),\n\tcurrentPage: getCurrentPage(state),\n\tisFetching: getIsFetching(state),\n\tfollowingInProgress: getFollowingInProgress(state),\n})\n\nexport default compose<React.ComponentType>(\n\tconnect<MapStatePropsType, MapDispatchPropsType, null, AppStateType>(mapStateToProps, {\n\t\tfollow,\n\t\tunfollow,\n\t\trequestUsers,\n\t}),\n\twithAuthRedirect\n)(UsersContainer)\n\ntype MapStatePropsType = {\n\tcurrentPage: number\n\tpageSize: number\n\ttotalUsersCount: number\n\tisFetching: boolean\n\tusers: Array<UserType>\n\tfollowingInProgress: Array<number>\n}\ntype MapDispatchPropsType = {\n\trequestUsers: (currentPage: number, pageSize: number) => void\n\tfollow: (userId: number) => void\n\tunfollow: (userId: number) => void\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n","import React, { useState, useEffect, ChangeEvent } from 'react'\nimport classes from './ProfileStatus.module.scss'\n\nconst ProfileStatus: React.FC<PropsType> = (props) => {\n\tconst [editMode, setEditMode] = useState(false)\n\tconst [status, setStatus] = useState(props.status)\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tif (props.isOwner) {\n\t\t\tsetEditMode(true)\n\t\t}\n\t}\n\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false)\n\t\tprops.updateStatus(status)\n\t}\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.target.value)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{!editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<span className={classes.status} onDoubleClick={activateEditMode}>\n\t\t\t\t\t\t{props.status || '------'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default ProfileStatus\n\ntype PropsType = {\n\tstatus: string\n\tisOwner: boolean\n\tupdateStatus: (status: string) => void\n}\n","import React from 'react'\nimport { reduxForm, InjectedFormProps } from 'redux-form'\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\nimport classes from './ProfileInfo.module.scss'\nimport style from './../../common/FormsControls/FormsControls.module.scss'\nimport { ProfileType } from '../../../types/types'\n\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, PropsType> & PropsType> = ({\n\tprofile,\n\thandleSubmit,\n\terror,\n}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.profileData}>\n\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Full name: </b>{' '}\n\t\t\t\t{createField<ProfileDataKeysType>('Full name', 'fullName', [], Input, {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Looking for a job: </b>{' '}\n\t\t\t\t{createField<ProfileDataKeysType>('', 'lookingForAJob', [], Input, {\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>My skills: </b> {createField<ProfileDataKeysType>('Description', 'lookingForAJobDescription', [], Textarea)}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>About me: </b> {createField<ProfileDataKeysType>('About me', 'aboutMe', [], Textarea)}\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t\t<b>Contacts: </b>\n\t\t\t\t\t{Object.keys(profile.contacts).map((key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={key} className={classes.contact}>\n\t\t\t\t\t\t\t\t<b>{key}: </b>{' '}\n\t\t\t\t\t\t\t\t{createField(key, 'contacts.' + key, [], Input, {\n\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div>\n\t\t\t\t<button>Save</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst ProfileDataFormReduxForm = reduxForm<ProfileType, PropsType>({\n\tform: 'edit-profile-data',\n})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm\n\ntype PropsType = {\n\tprofile: ProfileType\n}\ntype ProfileDataKeysType = Extract<keyof ProfileType, string>\n","import React, { useState, ChangeEvent } from 'react'\nimport classes from './ProfileInfo.module.scss'\nimport Preloader from '../../common/Preloader/Preloader'\nimport ProfileStatus from './ProfileStatus'\nimport userPhoto from '../../../assets/images/user.png'\nimport ProfileDataForm from './ProfileDataForm'\nimport { ProfileType, ContactsType } from '../../../types/types'\n\nconst ProfileInfo: React.FC<PropsType> = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n\tconst [editMode, setEditMode] = useState(false)\n\n\tif (!profile) {\n\t\treturn (\n\t\t\t<div className={classes.preloadWrapper}>\n\t\t\t\t<Preloader />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (e.target.files?.length) {\n\t\t\tsavePhoto(e.target.files[0])\n\t\t}\n\t}\n\n\tconst toEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\n\tconst onSubmit = (formData: ProfileType) => {\n\t\tsaveProfile(formData).then(() => {\n\t\t\tsetEditMode(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.descBlock}>\n\t\t\t\t<div className={classes.descBlockLeftCol}>\n\t\t\t\t\t<img src={profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"User\" />\n\t\t\t\t\t{isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.descBlockRightCol}>\n\t\t\t\t\t<div className={classes.head}>\n\t\t\t\t\t\t<h1 className={classes.name}>{profile.fullName}</h1>\n\t\t\t\t\t\t<ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{editMode ? (\n\t\t\t\t\t\t<ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ProfileData profile={profile} isOwner={isOwner} toEditMode={toEditMode} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, toEditMode }) => {\n\treturn (\n\t\t<div className={classes.profileData}>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Looking for a job: </b>\n\t\t\t\t{profile.lookingForAJob ? 'Yes' : 'No'}\n\t\t\t</div>\n\t\t\t{profile.lookingForAJob && (\n\t\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t\t<b>My skills: </b>\n\t\t\t\t\t{profile.lookingForAJobDescription}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<div>\n\t\t\t\t\t<b>About me: </b>\n\t\t\t\t\t{profile.aboutMe}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Contacts: </b>\n\t\t\t\t{Object.keys(profile.contacts).map((key) => {\n\t\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{isOwner && (\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={toEditMode}>Edit</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst Contact: React.FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\n\treturn (\n\t\t<div className={classes.contact}>\n\t\t\t<b>{contactTitle}: </b> {contactValue}\n\t\t</div>\n\t)\n}\n\nexport default ProfileInfo\n\ntype PropsType = {\n\tprofile: ProfileType | null\n\tstatus: string\n\tupdateStatus: (status: string) => void\n\tisOwner: boolean\n\tsavePhoto: (file: File) => void\n\tsaveProfile: (profileData: ProfileType) => Promise<any>\n}\ntype ProfileDataPropsType = {\n\tprofile: ProfileType\n\tisOwner: boolean\n\ttoEditMode: () => void\n}\ntype ContactPropsType = {\n\tcontactTitle: string\n\tcontactValue: string\n}\n","import { ProfileType, PhotosType } from './../types/types'\nimport { instance, APIResponseType } from './api'\n\ntype SavePhotoResponseDataType = {\n\tphotos: PhotosType\n}\n\nexport const profileAPI = {\n\tgetProfile(userId: number) {\n\t\treturn instance\n\t\t\t.get<ProfileType>(`profile/${userId}`)\n\t\t\t.then((response) => response.data)\n\t},\n\n\tgetStatus(userId: number) {\n\t\treturn instance\n\t\t\t.get<string>(`profile/status/${userId}`)\n\t\t\t.then((response) => response.data)\n\t},\n\n\tupdateStatus(status: string) {\n\t\treturn instance\n\t\t\t.put<APIResponseType>(`profile/status/`, { status })\n\t\t\t.then((response) => response.data)\n\t},\n\n\tsavePhoto(photo: any) {\n\t\tconst formData = new FormData()\n\t\tformData.append('image', photo)\n\n\t\treturn instance\n\t\t\t.put<APIResponseType<SavePhotoResponseDataType>>(\n\t\t\t\t`profile/photo/`,\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => response.data)\n\t},\n\n\tsaveProfile(profileData: ProfileType) {\n\t\treturn instance\n\t\t\t.put<APIResponseType>(`profile`, profileData)\n\t\t\t.then((response) => response.data)\n\t},\n}\n","import { profileAPI } from './../api/profile-api'\nimport { InferActionTypes, BaseThunkType } from './store'\nimport { ResultCodes } from '../api/api'\nimport { stopSubmit, FormAction } from 'redux-form'\nimport { PostType, ProfileType, PhotosType } from '../types/types'\n\nconst initialState = {\n\tposts: [\n\t\t{ id: 1, message: 'Hi', likesCount: 12 },\n\t\t{ id: 2, message: 'How are you', likesCount: 11 },\n\t] as Array<PostType>,\n\tprofile: null as ProfileType | null,\n\tstatus: '',\n\tnewPostText: '',\n}\n\nconst profileReducer = (\n\tstate = initialState,\n\taction: ActionsTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'profile/ADD_POST':\n\t\t\tlet newPost = {\n\t\t\t\tid: state.posts.length + 1,\n\t\t\t\tmessage: action.newPostText,\n\t\t\t\tlikesCount: 0,\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, newPost],\n\t\t\t}\n\n\t\tcase 'profile/SET_USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile,\n\t\t\t}\n\n\t\tcase 'profile/SET_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status,\n\t\t\t}\n\n\t\tcase 'profile/SAVE_PHOTO_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: { ...state.profile, photos: action.photos } as ProfileType,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actions = {\n\tsetUserProfile: (profile: ProfileType) =>\n\t\t({\n\t\t\ttype: 'profile/SET_USER_PROFILE',\n\t\t\tprofile,\n\t\t} as const),\n\tsetStatus: (status: string) =>\n\t\t({\n\t\t\ttype: 'profile/SET_STATUS',\n\t\t\tstatus,\n\t\t} as const),\n\tsavePhotoSuccess: (photos: PhotosType) =>\n\t\t({\n\t\t\ttype: 'profile/SAVE_PHOTO_SUCCESS',\n\t\t\tphotos,\n\t\t} as const),\n\taddPost: (newPostText: string) =>\n\t\t({\n\t\t\ttype: 'profile/ADD_POST',\n\t\t\tnewPostText,\n\t\t} as const),\n}\n\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\n\tconst data = await profileAPI.getProfile(userId)\n\tdispatch(actions.setUserProfile(data))\n}\n\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\n\tconst data = await profileAPI.getStatus(userId)\n\tdispatch(actions.setStatus(data))\n}\n\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n\ttry {\n\t\tconst data = await profileAPI.updateStatus(status)\n\n\t\tif (data.resultCode === ResultCodes.Success) {\n\t\t\tdispatch(actions.setStatus(status))\n\t\t}\n\t} catch (error) {\n\t\t// handle error\n\t}\n}\n\nexport const savePhoto = (photo: any): ThunkType => async (dispatch) => {\n\tconst data = await profileAPI.savePhoto(photo)\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tdispatch(actions.savePhotoSuccess(data.data.photos))\n\t}\n}\n\nexport const saveProfile = (profileData: ProfileType): ThunkType => async (\n\tdispatch,\n\tgetState\n) => {\n\tconst userId = getState().auth.userId\n\tconst data = await profileAPI.saveProfile(profileData)\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tif (userId) {\n\t\t\tdispatch(getProfile(userId))\n\t\t}\n\t} else {\n\t\tdispatch(\n\t\t\tstopSubmit('edit-profile-data', {\n\t\t\t\tcontacts: {\n\t\t\t\t\t[data.messages[0].slice(30, -1).toLowerCase()]: data.messages[0],\n\t\t\t\t},\n\t\t\t})\n\t\t)\n\t\treturn Promise.reject(data.messages[0])\n\t}\n}\n\nexport default profileReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import React from 'react'\nimport classes from './Post.module.scss'\nimport userPhoto from './../../../../assets/images/user.png'\n\nconst Post: React.FC<PropsType> = ({ message, likesCount }) => {\n\treturn (\n\t\t<div className={classes.item}>\n\t\t\t<div className={classes.wrapper}>\n\t\t\t\t<img src={userPhoto} alt=\"User\" />\n\t\t\t\t{message}\n\t\t\t</div>\n\t\t\t<div className={classes.likes}>\n\t\t\t\t<span>like</span> <span>{likesCount}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Post\n\ntype PropsType = {\n\tid: number\n\tmessage: string\n\tlikesCount: number\n}\n","import React from 'react'\nimport { reduxForm, InjectedFormProps } from 'redux-form'\nimport { maxLengthCreator } from '../../../../utils/validators/validators'\nimport {\n\tTextarea,\n\tcreateField,\n} from '../../../common/FormsControls/FormsControls'\n\nconst maxLength = maxLengthCreator(10)\n\nconst AddPostForm: React.FC<\n\tInjectedFormProps<AddPostFormType, PropsType> & PropsType\n> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t{createField<AddPostKeysType>(\n\t\t\t\t\t\"What's new?\",\n\t\t\t\t\t'newPostText',\n\t\t\t\t\t[maxLength],\n\t\t\t\t\tTextarea,\n\t\t\t\t\t{}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst NewPostReduxForm = reduxForm<AddPostFormType, PropsType>({\n\tform: 'profileAddPostForm',\n})(AddPostForm)\n\nexport default NewPostReduxForm\n\ntype PropsType = {}\nexport type AddPostFormType = {\n\tnewPostText: string\n}\ntype AddPostKeysType = Extract<keyof AddPostFormType, string>\n","import React from 'react'\nimport classes from './MyPosts.module.scss'\nimport Post from './Post/Post'\nimport NewPostReduxForm, { AddPostFormType } from './AddPostForm/AddPostForm'\nimport { PostType } from '../../../types/types'\n\nconst MyPosts: React.FC<PropsType> = React.memo(({ posts, addPost }) => {\n\tconst postsElements = posts.map((p) => (\n\t\t<Post id={p.id} key={p.id} message={p.message} likesCount={p.likesCount} />\n\t))\n\n\tconst addNewPost = (formData: AddPostFormType) => {\n\t\taddPost(formData.newPostText)\n\t}\n\n\treturn (\n\t\t<div className={classes.postsBlock}>\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<NewPostReduxForm onSubmit={addNewPost} />\n\t\t\t</div>\n\t\t\t<div className={classes.posts}>{postsElements}</div>\n\t\t</div>\n\t)\n})\n\nexport default MyPosts\n\ntype PropsType = {\n\tposts: Array<PostType>\n\taddPost: (newPostText: string) => void\n}\n","import { actions } from '../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux'\nimport { PostType } from '../../../types/types'\nimport { AppStateType } from '../../../redux/store'\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tposts: state.profilePage.posts,\n})\n\nexport default (connect<\n\tMapStatePropsType,\n\tMapDispatchPropsType,\n\tnull,\n\tAppStateType\n>(mapStateToProps, { ...actions })(MyPosts) as unknown) as React.ComponentType\n\ntype MapStatePropsType = {\n\tposts: Array<PostType>\n}\ntype MapDispatchPropsType = {\n\taddPost: (newPostText: string) => void\n}\n","import React from 'react'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport { ProfileType } from '../../types/types'\n\nconst Profile: React.FC<PropsType> = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n\treturn (\n\t\t<section>\n\t\t\t<ProfileInfo\n\t\t\t\tprofile={profile}\n\t\t\t\tstatus={status}\n\t\t\t\tupdateStatus={updateStatus}\n\t\t\t\tisOwner={isOwner}\n\t\t\t\tsavePhoto={savePhoto}\n\t\t\t\tsaveProfile={saveProfile}\n\t\t\t/>\n\t\t\t<MyPostsContainer />\n\t\t</section>\n\t)\n}\n\nexport default Profile\n\ntype PropsType = {\n\tprofile: ProfileType | null\n\tstatus: string\n\tisOwner: boolean\n\tupdateStatus: (status: string) => void\n\tsavePhoto: (file: File) => void\n\tsaveProfile: (profile: ProfileType) => Promise<any>\n}\n","import React from 'react'\nimport Profile from './Profile'\nimport { connect } from 'react-redux'\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\nimport { ProfileType } from '../../types/types'\nimport { AppStateType } from '../../redux/store'\n\nclass ProfileContainer extends React.Component<PropsType> {\n\trefreshProfile() {\n\t\tconst userId: number | null = +this.props.match.params.userId || this.props.authorizedUserId\n\n\t\tthis.props.getProfile(userId as number)\n\t\tthis.props.getStatus(userId as number)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile()\n\t}\n\n\tcomponentDidUpdate(prevProps: PropsType) {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\n\t\t\tthis.refreshProfile()\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <Profile {...this.props} isOwner={!this.props.match.params.userId} />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth,\n})\n\nexport default compose<React.ComponentType>(\n\tconnect<MapStatePropsType, MapDispatchPropsType, RouteComponentProps<PathParamsType>, AppStateType>(mapStateToProps, {\n\t\tgetProfile,\n\t\tgetStatus,\n\t\tupdateStatus,\n\t\tsavePhoto,\n\t\tsaveProfile,\n\t}),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer)\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = {\n\tgetProfile: (userId: number) => void\n\tgetStatus: (userId: number) => void\n\tupdateStatus: (status: string) => void\n\tsavePhoto: (file: File) => void\n\tsaveProfile: (profile: ProfileType) => any\n}\ntype PathParamsType = {\n\tuserId: string\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamsType>\n","import React from 'react'\nimport classes from './Header.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nconst Header: React.FC<PropsType> = ({ isAuth, login, logout }) => {\n\treturn (\n\t\t<header className={classes.header}>\n\t\t\t<NavLink to={'/profile'}>\n\t\t\t\t<img\n\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\tsrc=\"https://www.doodle.tj/wp-content/uploads/2019/06/xreact2.png.pagespeed.ic.cFqX4FyKm1.png\"\n\t\t\t\t\talt=\"Logo\"\n\t\t\t\t/>\n\t\t\t</NavLink>\n\n\t\t\t<div className={classes.loginBlock}>\n\t\t\t\t{isAuth ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className={classes.login}>{login}</div>\n\t\t\t\t\t\t<button onClick={logout}>Log out</button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<NavLink to={'/login'}>Login</NavLink>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n\nexport default Header\n\ntype PropsType = {\n\tisAuth: boolean\n\tlogin: string | null\n\tlogout: () => void\n}\n","import { instance } from './api'\n\ntype getCaptchaUrlResponseType = {\n\turl: string\n}\n\nexport const securityAPI = {\n\tgetCaptchaUrl() {\n\t\treturn instance\n\t\t\t.get<getCaptchaUrlResponseType>('security/get-captcha-url')\n\t\t\t.then((response) => response.data)\n\t},\n}\n","import {\n\tinstance,\n\tResultCodes,\n\tResultCodeForCaptcha,\n\tAPIResponseType,\n} from './api'\n\ntype MeResponseDataType = {\n\tid: number\n\temail: string\n\tlogin: string\n}\n\ntype LoginResponseDataType = {\n\tuserId: number\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance\n\t\t\t.get<APIResponseType<MeResponseDataType>>('auth/me')\n\t\t\t.then((response) => response.data)\n\t},\n\n\tlogin(\n\t\temail: string,\n\t\tpassword: string,\n\t\trememberMe = false,\n\t\tcaptcha: null | string = null\n\t) {\n\t\treturn instance\n\t\t\t.post<\n\t\t\t\tAPIResponseType<\n\t\t\t\t\tLoginResponseDataType,\n\t\t\t\t\tResultCodes | ResultCodeForCaptcha\n\t\t\t\t>\n\t\t\t>('auth/login', {\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t\trememberMe,\n\t\t\t\tcaptcha,\n\t\t\t})\n\t\t\t.then((response) => response.data)\n\t},\n\n\tlogout() {\n\t\treturn instance\n\t\t\t.delete<APIResponseType>('auth/login')\n\t\t\t.then((response) => response.data)\n\t},\n}\n","import { securityAPI } from './../api/security-api'\nimport { authAPI } from './../api/auth-api'\nimport { InferActionTypes, BaseThunkType } from './store'\nimport { ResultCodes, ResultCodeForCaptcha } from '../api/api'\nimport { stopSubmit, FormAction } from 'redux-form'\n\nconst initialState = {\n\tuserId: null as number | null,\n\temail: null as string | null,\n\tlogin: null as string | null,\n\tisAuth: false,\n\tcaptchaUrl: null as string | null, // if null, then captcha url is not required\n}\n\nconst authReducer = (\n\tstate = initialState,\n\taction: ActionsTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'auth/SET_USER_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t}\n\n\t\tcase 'auth/GET_CAPTCHA_URL_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcaptchaUrl: action.captchaUrl,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actions = {\n\tsetAuthUserData: (\n\t\tuserId: number | null,\n\t\temail: string | null,\n\t\tlogin: string | null,\n\t\tisAuth: boolean\n\t) =>\n\t\t({\n\t\t\ttype: 'auth/SET_USER_DATA',\n\t\t\tpayload: { userId, email, login, isAuth },\n\t\t} as const),\n\tgetCaptchaUrlSuccess: (captchaUrl: string) =>\n\t\t({\n\t\t\ttype: 'auth/GET_CAPTCHA_URL_SUCCESS',\n\t\t\tcaptchaUrl,\n\t\t} as const),\n}\n\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n\tconst data = await authAPI.me()\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tconst { id, email, login } = data.data\n\t\tdispatch(actions.setAuthUserData(id, email, login, true))\n\t}\n}\n\nexport const login = (\n\temail: string,\n\tpassword: string,\n\trememberMe: boolean,\n\tcaptcha: string\n): ThunkType => async (dispatch) => {\n\tconst data = await authAPI.login(email, password, rememberMe, captcha)\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tdispatch(getAuthUserData())\n\t} else {\n\t\tif (data.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n\t\t\tdispatch(getCaptchaUrl())\n\t\t}\n\t\tconst message = data.messages.length > 0 ? data.messages[0] : 'Some error'\n\t\tdispatch(stopSubmit('login', { _error: message }))\n\t}\n}\n\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\n\tconst data = await securityAPI.getCaptchaUrl()\n\tconst captchaUrl = data.url\n\tdispatch(actions.getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout = (): ThunkType => async (dispatch) => {\n\tconst data = await authAPI.logout()\n\tif (data.resultCode === ResultCodes.Success) {\n\t\tdispatch(actions.setAuthUserData(null, null, null, false))\n\t}\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import React from 'react'\nimport Header from './Header'\nimport { connect } from 'react-redux'\nimport { logout } from '../../redux/auth-reducer'\nimport { AppStateType } from '../../redux/store'\n\nclass HeaderContainer extends React.Component<MapStatePropsType & MapDispatchPropsType> {\n\trender() {\n\t\treturn <Header {...this.props} />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tisAuth: state.auth.isAuth,\n\tlogin: state.auth.login,\n})\n\nexport default (connect<MapStatePropsType, MapDispatchPropsType, null, AppStateType>(mapStateToProps, { logout })(\n\tHeaderContainer\n) as unknown) as React.ComponentType\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n\tlogin: string | null\n}\ntype MapDispatchPropsType = {\n\tlogout: () => void\n}\n","import React from 'react'\nimport { reduxForm, InjectedFormProps } from 'redux-form'\nimport { Input, createField } from '../common/FormsControls/FormsControls'\nimport { required } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport { login } from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from './../common/FormsControls/FormsControls.module.scss'\nimport classes from './Login.module.scss'\nimport { AppStateType } from '../../redux/store'\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({\n\thandleSubmit,\n\terror,\n\tcaptchaUrl,\n}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.loginForm}>\n\t\t\t{createField<LoginFormValuesTypeKeys>('Email', 'email', [required], Input, { type: 'text' })}\n\t\t\t{createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, { type: 'password' })}\n\t\t\t{createField<LoginFormValuesTypeKeys>(undefined, 'rememberMe', [], Input, { type: 'checkbox' }, 'Remember me')}\n\n\t\t\t{captchaUrl && <img src={captchaUrl} alt=\"captcha\" />}\n\t\t\t{captchaUrl &&\n\t\t\t\tcreateField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, { type: 'text' })}\n\n\t\t\t{error && !captchaUrl && <div className={style.formSummaryError}>{error}</div>}\n\t\t\t<div className={classes.loginFormButton}>\n\t\t\t\t<button>Login</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ form: 'login' })(LoginForm)\n\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = ({ isAuth, login, captchaUrl }) => {\n\tconst onSubmit = (formData: LoginFormValuesType) => {\n\t\tlogin(formData.email, formData.password, formData.rememberMe, formData.captcha)\n\t}\n\n\tif (isAuth) {\n\t\treturn <Redirect to={'/profile'} />\n\t}\n\n\treturn (\n\t\t<div className={classes.loginContainer}>\n\t\t\t<div className={classes.login}>\n\t\t\t\t<h1 className={classes.loginTitle}>Login</h1>\n\t\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tcaptchaUrl: state.auth.captchaUrl,\n\tisAuth: state.auth.isAuth,\n})\n\nexport default connect(mapStateToProps, { login })(Login)\n\ntype LoginFormOwnProps = {\n\tcaptchaUrl: string | null\n}\ntype LoginFormValuesType = {\n\temail: string\n\tpassword: string\n\trememberMe: boolean\n\tcaptcha: string\n}\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\ntype MapStatePropsType = {\n\tcaptchaUrl: string | null\n\tisAuth: boolean\n}\ntype MapDispatchPropsType = {\n\tlogin: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n","import { InferActionTypes, BaseThunkType } from './store'\nimport { getAuthUserData } from './auth-reducer'\n\nconst initialState = {\n\tinitialized: false,\n}\n\nconst appReducer = (\n\tstate = initialState,\n\taction: ActionsTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'app/INITIALIZED_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actions = {\n\tsetInitializedSuccess: () => ({ type: 'app/INITIALIZED_SUCCESS' } as const),\n}\n\nexport const initializeApp = (): ThunkType => (dispatch) => {\n\tconst promise = dispatch(getAuthUserData())\n\tpromise.then(() => {\n\t\tdispatch(actions.setInitializedSuccess())\n\t})\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes, void>\n","import {\n\tcreateStore,\n\tcombineReducers,\n\tapplyMiddleware,\n\tcompose,\n\tAction,\n} from 'redux'\nimport profileReducer from './profile-reducer'\nimport dialogsReducer from './dialogs-reducer'\nimport usersReducer from './users-reducer'\nimport authReducer from './auth-reducer'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from './app-reducer'\n\nconst rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tusersPage: usersReducer,\n\tauth: authReducer,\n\tform: formReducer,\n\tapp: appReducer,\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionTypes<T> = T extends {\n\t[key: string]: (...args: any[]) => infer U\n}\n\t? U\n\t: never\n\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n\tR,\n\tAppStateType,\n\tunknown,\n\tA\n>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n\trootReducer,\n\tcomposeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React, { Suspense } from 'react'\nimport Preloader from '../components/common/Preloader/Preloader'\n\nfunction withSuspense<WCP>(Component: React.ComponentType<WCP>) {\n\treturn (props: WCP) => {\n\t\treturn (\n\t\t\t<Suspense fallback={<Preloader />}>\n\t\t\t\t<Component {...props} />\n\t\t\t</Suspense>\n\t\t)\n\t}\n}\n\nexport default withSuspense\n","import React from 'react'\nimport './App.scss'\nimport Navbar from './components/Navbar/Navbar'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport {\n\tHashRouter,\n\tRoute,\n\twithRouter,\n\tSwitch,\n\tRedirect,\n} from 'react-router-dom'\nimport UsersContainer from './components/Users/UsersContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport { Provider, connect } from 'react-redux'\nimport { initializeApp } from './redux/app-reducer'\nimport { compose } from 'redux'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store, { AppStateType } from './redux/store'\nimport withSuspense from './hoc/withSuspense'\n\nconst DialogsContainer = React.lazy(() =>\n\timport('./components/Dialogs/DialogsContainer')\n)\nconst SuspendedDialogs = withSuspense(DialogsContainer)\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n\tcatchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n\t\talert(e)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\n\t\twindow.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\n\t\t\t'unhandledrejection',\n\t\t\tthis.catchAllUnhandledErrors\n\t\t)\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn (\n\t\t\t\t<div className=\"appPreloader\">\n\t\t\t\t\t<Preloader />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t{/* header */}\n\t\t\t\t<div className=\"app-wrapper-header\">\n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<HeaderContainer />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* / header */}\n\n\t\t\t\t{/* main */}\n\t\t\t\t<div className=\"app-wrapper-main\">\n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t{/* navbar */}\n\t\t\t\t\t\t<div className=\"app-wrapper-navbar\">\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* / navbar */}\n\n\t\t\t\t\t\t{/* content */}\n\t\t\t\t\t\t<div className=\"app-wrapper-content\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/profile\" />\n\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath=\"/profile/:userId?\"\n\t\t\t\t\t\t\t\t\trender={() => <ProfileContainer />}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Route path=\"/dialogs\" render={() => <SuspendedDialogs />} />\n\n\t\t\t\t\t\t\t\t<Route path=\"/users\" render={() => <UsersContainer />} />\n\n\t\t\t\t\t\t\t\t<Route path=\"/news\" component={News} />\n\t\t\t\t\t\t\t\t<Route path=\"/music\" component={Music} />\n\t\t\t\t\t\t\t\t<Route path=\"/settings\" component={Settings} />\n\n\t\t\t\t\t\t\t\t<Route path=\"/login\" render={() => <Login />} />\n\n\t\t\t\t\t\t\t\t<Route path=\"*\" render={() => <div>404 NOT FOUND</div>} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* / content */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* / main */}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tinitialized: state.app.initialized,\n})\n\nconst AppWithRouter = compose<React.ComponentType>(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp })\n)(App)\n\nconst MainApp: React.FC = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<AppWithRouter />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t)\n}\n\nexport default MainApp\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n\tinitializeApp: () => void\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport MainApp from './App';\n\n\nReactDOM.render(<MainApp /> , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"errorText\":\"FormsControls_errorText__2AH-C\",\"formSummaryError\":\"FormsControls_formSummaryError__Wift6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1Bxqa\",\"userPhoto\":\"User_userPhoto__3mwGu\",\"userFollowButton\":\"User_userFollowButton__1_UP8\",\"userInfo\":\"User_userInfo__1SfqK\",\"userInfoName\":\"User_userInfoName__1lqcm\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n\tif (value) return undefined;\n\n\treturn 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => value => {\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n\treturn undefined;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3C8hn\",\"paginatorPrevButton\":\"Paginator_paginatorPrevButton__2F6vb\",\"paginatorNextButton\":\"Paginator_paginatorNextButton__Znx-P\",\"paginatorPageNumber\":\"Paginator_paginatorPageNumber__jEt3x\",\"paginatorSelectedPage\":\"Paginator_paginatorSelectedPage__3eUtV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3Scu4\",\"loginTitle\":\"Login_loginTitle__2PX3a\",\"loginForm\":\"Login_loginForm__32H5B\",\"loginFormButton\":\"Login_loginFormButton__3V3mP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"logo\":\"Header_logo__3T0lc\",\"loginBlock\":\"Header_loginBlock__3g_eP\",\"login\":\"Header_login__2sv5i\"};","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../redux/store'\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: state.auth.isAuth,\n})\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n}\n\ntype MapDispatchToProps = {}\n\nfunction withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\n\tconst RedirectComponent: React.FC<MapStatePropsType & MapDispatchToProps> = (\n\t\tprops\n\t) => {\n\t\tconst { isAuth, ...restProps } = props\n\t\tif (!isAuth) return <Redirect to={'/login'} />\n\n\t\treturn <Component {...(restProps as WCP)} />\n\t}\n\n\tconst ConnectedRedirectComponent = connect<\n\t\tMapStatePropsType,\n\t\tMapDispatchToProps,\n\t\tWCP,\n\t\tAppStateType\n\t>(mapStateToProps)(RedirectComponent)\n\n\treturn ConnectedRedirectComponent\n}\n\nexport default withAuthRedirect\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\",\"wrapper\":\"Post_wrapper__1Cl7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__3zKO4\",\"usersWrapper\":\"Users_usersWrapper__343ba\"};"],"sourceRoot":""}