{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","redux/dialogs-reducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.module.scss","components/Profile/ProfileInfo/ProfileStatus.module.scss","components/Navbar/Navbar.module.scss","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/api.js","utils/objectHelpers.js","redux/users-reducer.ts","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.module.scss","components/Users/User.module.scss","assets/images/user.png","utils/validators/validators.js","components/common/Paginator/Paginator.module.scss","components/Login/Login.module.scss","components/Header/Header.module.scss","hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.scss","components/Users/Users.module.scss","components/Profile/MyPosts/MyPosts.module.scss"],"names":["FormControl","meta","children","hasError","error","touched","className","classes","formControl","errorText","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","initialState","dialogs","id","messages","message","sendMessage","newMessage","type","dialogsReducer","state","action","length","Boolean","window","location","hostname","match","Navbar","nav","navList","navListItem","to","activeClassName","active","News","Music","Settings","instance","Axios","create","withCredentials","baseURL","headers","authAPI","get","then","response","data","email","password","rememberMe","captcha","post","delete","usersAPI","getUsers","currentPage","pageSize","follow","userId","unfollow","profileAPI","status","put","photo","formData","FormData","append","profileData","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","item","FOLLOW","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","paginatorPrevButton","p","key","cn","paginatorPageNumber","paginatorSelectedPage","paginatorNextButton","User","user","userPhoto","src","photos","small","alt","userFollowButton","disabled","some","userInfo","userInfoName","userLocation","Users","usersContainer","usersWrapper","u","Preloader","preloader","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","Component","compose","connect","bind","page","totalCount","withAuthRedirect","ProfileStatus","editMode","setEditMode","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","target","value","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","onSubmit","style","formSummaryError","profileDataItem","Object","keys","contacts","contact","ProfileData","toEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","preloadWrapper","descBlock","descBlockLeftCol","large","mainPhoto","files","descBlockRightCol","head","fullName","initialValues","ADD_POST","posts","likesCount","newPostText","getProfile","profileReducer","newPost","Post","wrapper","likes","maxLength","maxLengthCreator","NewPostReduxForm","Field","MyPosts","memo","addPost","postsElements","postsBlock","profilePage","Profile","MyPostsContainer","ProfileContainer","params","authorizedUserId","getStatus","refreshProfile","prevProps","auth","isAuth","getState","stopSubmit","slice","toLowerCase","Promise","reject","withRouter","Header","login","logout","header","logo","loginBlock","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","loginForm","required","loginFormButton","_error","loginContainer","loginTitle","initialized","appReducer","reducers","combineReducers","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","from","path","render","AppWithRouter","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mapStateToProps","RedirectComponent"],"mappings":"+RAKMA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAWF,EAAKG,OAASH,EAAKI,QAEpC,OACC,yBAAKC,UAAS,UAAKC,IAAQC,YAAb,YAA4BL,EAAWI,IAAQH,MAAQ,KACpE,6BACEF,GAEDC,GAAY,yBAAKG,UAAWC,IAAQE,WAAYR,EAAKG,SAK5CM,EAAW,SAACC,GAAW,IAC3BC,EAAwBD,EAAxBC,MAAUC,EADgB,YACFF,EADE,WAElC,OACC,kBAACX,EAAgBa,EAAW,8CAAcD,EAAWC,MAI1CC,EAAQ,SAACH,GAAW,IACxBC,EAAwBD,EAAxBC,MAAUC,EADa,YACCF,EADD,WAE/B,OACC,kBAACX,EAAgBa,EAAW,2CAAWD,EAAWC,MAIvCE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAsC,IAA3BR,EAA0B,uDAAlB,GAAIS,EAAc,uDAAP,GACxF,OACC,6BACC,kBAAC,IAAD,eACCJ,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACXE,SAAUH,GACNP,IANN,IAMiBS,K,mBCvCnBE,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,UAAY,+BAA+B,iBAAmB,sCAAsC,UAAY,+BAA+B,kBAAoB,uCAAuC,KAAO,0BAA0B,KAAO,0BAA0B,gBAAkB,qCAAqC,YAAc,iCAAiC,QAAU,+B,sFCW7bC,EAAe,CACpBC,QAAS,CACR,CAACC,GAAI,EAAGT,KAAM,SACd,CAACS,GAAI,EAAGT,KAAM,SACd,CAACS,GAAI,EAAGT,KAAM,SACd,CAACS,GAAI,EAAGT,KAAM,SACd,CAACS,GAAI,EAAGT,KAAM,WACd,CAACS,GAAI,EAAGT,KAAM,SAEfU,SAAU,CACT,CAACD,GAAI,EAAGE,QAAS,MACjB,CAACF,GAAI,EAAGE,QAAS,eACjB,CAACF,GAAI,EAAGE,QAAS,OACjB,CAACF,GAAI,EAAGE,QAAS,OACjB,CAACF,GAAI,EAAGE,QAAS,SA6BNC,EAAc,SAACC,GAAD,MACzB,CACAC,KAzDmB,uBA0DnBD,eAGaE,IA7BQ,WAA4E,IAA3EC,EAA0E,uDAAlET,EAAcU,EAAoD,uCACjG,OAAQA,EAAOH,MACd,IAlCmB,uBAmClB,IAAMD,EAAa,CAClBJ,GAAIO,EAAMN,SAASQ,OAAS,EAC5BP,QAASM,EAAOJ,YAGjB,OAAO,eACHG,EADJ,CAECN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsBG,MAGhC,QACC,OAAOG,K,oBC9CVX,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,OAAS,gC,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,YAAc,4BAA4B,OAAS,yB,+JCW7Ga,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qFCCSC,EAfA,WACd,OACC,yBAAKnC,UAAWC,IAAQmC,KACvB,wBAAIpC,UAAWC,IAAQoC,SACtB,wBAAIrC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBvC,IAAQwC,QAAhD,YACpC,wBAAIzC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBvC,IAAQwC,QAAhD,aACpC,wBAAIzC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBvC,IAAQwC,QAA9C,UACpC,wBAAIzC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBvC,IAAQwC,QAA7C,SACpC,wBAAIzC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBvC,IAAQwC,QAA9C,UACpC,wBAAIzC,UAAWC,IAAQqC,aAAa,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBvC,IAAQwC,QAAjD,gBCFzBC,EARF,SAACrC,GACb,OACC,sCCMasC,EARD,SAACtC,GACd,OACC,uCCMauC,EARE,SAACvC,GACjB,OACC,0C,gECHIwC,E,OAAWC,EAAMC,OAAO,CAC7BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACR,UAAW,0CAIAC,EAAU,WAGrB,OAAON,EAASO,IAAI,WAClBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJjBJ,EAAU,SAOhBK,EAAOC,GAA+C,IAArCC,EAAoC,wDAAhBC,EAAgB,uDAAN,KACpD,OAAOd,EAASe,KAAK,aAAc,CAACJ,QAAOC,WAAUC,aAAYC,YAC/DN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATjBJ,EAAU,WAarB,OAAON,EAASgB,OAAO,cACrBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAIjBO,EAAW,CAEvBC,SAFuB,WAEmB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACpC,OAAOpB,EAASO,IAAT,qBAA2BY,EAA3B,kBAAgDC,IACrDZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG7BW,OAPuB,SAOhBC,GACN,OAAOtB,EAASe,KAAT,iBAAwBO,IAC7Bd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG7Ba,SAZuB,SAYdD,GACR,OAAOtB,EAASgB,OAAT,iBAA0BM,IAC/Bd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAIjBc,EAAa,SAERF,GAAS,OAAD,6HACjBtB,EAASO,IAAT,kBAAwBe,IAC7Bd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAFJ,8CAFbc,EAAa,SAOfF,GACT,OAAOtB,EAASO,IAAT,yBAA+Be,IACpCd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATjBc,EAAa,SAYZC,GACZ,OAAOzB,EAAS0B,IAAT,kBAAgC,CAACD,WACtCjB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdjBc,EAAa,SAiBfG,GACT,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElB3B,EAAS0B,IAAT,iBAA+BE,EAAU,CAC/CvB,QAAS,CACR,eAAgB,yBAGhBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA1BjBc,EAAa,SA6BbO,GACX,OAAO/B,EAAS0B,IAAT,UAAwBK,GAC7BvB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAIjBsB,EAAc,WAGzB,OAAOhC,EAASO,IAAI,4BAClBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCrFjBuB,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC/D,OAAOH,EAAMI,KAAI,SAAAC,GAChB,OAAIA,EAAKH,KAAiBD,EAClB,eAAII,EAAX,GAAoBF,GAGdE,MCFHC,EAAS,eAQTnE,EAAe,CACpBoE,MAAO,GACPrB,SAAU,GACVsB,gBAAiB,EACjBvB,YAAa,EACbwB,YAAY,EACZC,oBAAqB,IA6DhBC,EAAgB,SAACvB,GAAD,MACpB,CACA1C,KAAM4D,EACNlB,WAQIwB,EAAkB,SAACxB,GAAD,MACtB,CACA1C,KAvFe,iBAwFf0C,WA8BIyB,EAAmB,SAACJ,GAAD,MACvB,CACA/D,KApHyB,2BAqHzB+D,eASIK,EAA0B,SAACL,EAAqBrB,GAAtB,MAC9B,CACA1C,KA/HgC,kCAgIhC+D,aACArB,WAwBI2B,EAAkB,uCAAG,WAAOC,EAAe5B,EAAgB6B,EAAgBC,GAAtD,SAAAC,EAAA,6DAC1BH,EAASF,GAAwB,EAAM1B,IADb,SAGP6B,EAAU7B,GAHH,OAIF,IAJE,OAIjBgC,YACRJ,EAASE,EAAc9B,IAExB4B,EAASF,GAAwB,EAAO1B,IAPd,2CAAH,4DAkBTiC,EA9JM,WAA0D,IAAzDzE,EAAwD,uDAAhDT,EAAcU,EAAkC,uCAC7E,OAAQA,EAAOH,MACd,KAAK4D,EACJ,OAAO,eACH1D,EADJ,CAEC2D,MAAOR,EAAoBnD,EAAM2D,MAAO1D,EAAOuC,OAAQ,KAAM,CAACkC,UAAU,MAG1E,IA1Be,iBA2Bd,OAAO,eACH1E,EADJ,CAEC2D,MAAOR,EAAoBnD,EAAM2D,MAAO1D,EAAOuC,OAAQ,KAAM,CAACkC,UAAU,MAG1E,IA/BgB,kBAgCf,OAAO,eACH1E,EADJ,CAEC2D,MAAO1D,EAAO0D,QAGhB,IApCuB,yBAqCtB,OAAO,eACH3D,EADJ,CAECqC,YAAapC,EAAOoC,cAGtB,IAzC4B,8BA0C3B,OAAO,eACHrC,EADJ,CAEC4D,gBAAiB3D,EAAO2D,kBAG1B,IA9CyB,2BA+CxB,OAAO,eACH5D,EADJ,CAEC6D,WAAY5D,EAAO4D,aAGrB,IAnDgC,kCAoD/B,OAAO,eACH7D,EADJ,CAEC8D,oBAAqB7D,EAAO4D,WAAP,sBAChB7D,EAAM8D,qBADU,CACW7D,EAAOuC,SACtC,CAACxC,EAAM8D,oBAAoBa,QAAO,SAAAlF,GAAE,OAAIA,IAAOQ,EAAOuC,aAGzD,QACC,OAAOxC,I,qECdK4E,GAnDG,SAAC,GAUlB,IALwB,IAJxBC,EAIuB,EAJvBA,gBACAvC,EAGuB,EAHvBA,SACAD,EAEuB,EAFvBA,YACAyC,EACuB,EADvBA,cACuB,IAAvBC,mBAAuB,MAAT,GAAS,EAEjBC,EAAaC,KAAKC,KAAKL,EAAkBvC,GAEzC6C,EAAQ,GACLC,EAAI,EAAGA,GAAKJ,EAAYI,IAChCD,EAAME,KAAKD,GAGZ,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GATrB,EAUqBQ,mBAAS,GAV9B,mBAUfC,EAVe,KAUAC,EAVA,KAWjBC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE/C,OACC,yBAAK1G,UAAWC,IAAQsH,WACtBJ,EAAgB,GAChB,4BACCK,QAAS,WAAQJ,EAAiBD,EAAgB,IAClDnH,UAAWC,IAAQwH,qBAFpB,QAOAX,EACER,QAAO,SAAAoB,GAAC,OAAIA,GAAKL,GAAyBK,GAAKJ,KAC/CnC,KAAI,SAAAuC,GAAC,OACL,0BACCC,IAAKD,EACL1H,UAAW4H,KAAG3H,IAAQ4H,oBAAT,eACX5H,IAAQ6H,sBAAwB9D,IAAgB0D,IAElDF,QAAS,WAAQf,EAAciB,KAAOA,MAGzCT,EAAeE,GACf,4BACCK,QAAS,WAAQJ,EAAiBD,EAAgB,IAClDnH,UAAWC,IAAQ8H,qBAFpB,U,wCCDWC,GAvCF,SAAC,GAIa,IAH1BC,EAGyB,EAHzBA,KACA/D,EAEyB,EAFzBA,OACAE,EACyB,EADzBA,SACAqB,EAAyB,EAAzBA,oBAEA,OACI,yBAAKzF,UAAWC,KAAQgI,MACvB,6BACC,yBAAKjI,UAAWC,KAAQiI,WACvB,kBAAC,IAAD,CAAS3F,GAAI,YAAc0F,EAAK7G,IAC/B,yBAAK+G,IAAKF,EAAKG,OAAOC,MAAQJ,EAAKG,OAAOC,MAAQH,KAAWI,IAAI,WAGnE,yBAAKtI,UAAWC,KAAQsI,kBAEtBN,EAAK5B,SACJ,4BAAQmC,SAAU/C,EAAoBgD,MAAK,SAAArH,GAAE,OAAIA,IAAO6G,EAAK7G,MAAKoG,QAAS,WAC1EpD,EAAS6D,EAAK7G,MADf,YAGA,4BAAQoH,SAAU/C,EAAoBgD,MAAK,SAAArH,GAAE,OAAIA,IAAO6G,EAAK7G,MAAKoG,QAAS,WAC1EtD,EAAO+D,EAAK7G,MADb,YAMJ,yBAAKpB,UAAWC,KAAQyI,UACvB,yBAAK1I,UAAWC,KAAQ0I,cAAeV,EAAKtH,MAC5C,6BAAMsH,EAAK3D,SAEZ,yBAAKtE,UAAWC,KAAQ2I,cACvB,6BAAM,yBACN,6BAAM,yBCDEC,GA/BD,SAAC,GAQa,IAP3BtD,EAO0B,EAP1BA,gBACAtB,EAM0B,EAN1BA,SACAD,EAK0B,EAL1BA,YACAsB,EAI0B,EAJ1BA,MACApB,EAG0B,EAH1BA,OACAE,EAE0B,EAF1BA,SACAqC,EAC0B,EAD1BA,cACAhB,EAA0B,EAA1BA,oBAEA,OACC,yBAAKzF,UAAWC,IAAQ6I,gBACvB,kBAAC,GAAD,CACCtC,gBAAiBjB,EACjBtB,SAAUA,EACVD,YAAaA,EACbyC,cAAeA,IAChB,yBAAKzG,UAAWC,IAAQ8I,cAEtBzD,EAAMH,KAAI,SAAA6D,GAAC,OAAI,kBAAC,GAAD,CAAMrB,IAAKqB,EAAE5H,GAC3B6G,KAAMe,EACN9E,OAAQA,EACRE,SAAUA,EACVqB,oBAAqBA,U,0CChBZwD,GARG,WACjB,OACC,yBAAKjJ,UAAWC,KAAQiJ,WACvB,yBAAKf,IAAKe,KAAWZ,IAAI,gB,iBCRfvE,GAAW,SAAApC,GACvB,OAAOA,EAAMwH,UAAU7D,OAGX8D,GAAc,SAAAzH,GAC1B,OAAOA,EAAMwH,UAAUlF,UAGXoF,GAAqB,SAAA1H,GACjC,OAAOA,EAAMwH,UAAU5D,iBAGX+D,GAAiB,SAAA3H,GAC7B,OAAOA,EAAMwH,UAAUnF,aAGXuF,GAAgB,SAAA5H,GAC5B,OAAOA,EAAMwH,UAAU3D,YAGXgE,GAAyB,SAAA7H,GACrC,OAAOA,EAAMwH,UAAU1D,qBCZlBgE,G,2MAMLhD,cAAgB,SAACiD,GAAgB,IAAD,EACE,EAAKrJ,OACtCsJ,EAF+B,EACxBA,cACMD,EAFkB,EACVzF,W,mFAND,IAAD,EAC2B2F,KAAKvJ,OACnDsJ,EAFmB,EACZA,cADY,EACE3F,YADF,EACeC,Y,+BAUlC,OAAI2F,KAAKvJ,MAAMmF,WACP,kBAAC,GAAD,MAGD,oCAEN,kBAAC,GAAD,CAAOD,gBAAiBqE,KAAKvJ,MAAMkF,gBAClCtB,SAAU2F,KAAKvJ,MAAM4D,SACrBD,YAAa4F,KAAKvJ,MAAM2D,YACxBsB,MAAOsE,KAAKvJ,MAAMiF,MAClBpB,OAAQ0F,KAAKvJ,MAAM6D,OACnBE,SAAUwF,KAAKvJ,MAAM+D,SACrBqC,cAAemD,KAAKnD,cACpBhB,oBAAqBmE,KAAKvJ,MAAMoF,2B,GAzBPoE,IAAMC,WAwCpBC,gBACdC,aAXuB,SAAArI,GAAK,MAC3B,CACA2D,MAAOvB,GAASpC,GAChBsC,SAAUmF,GAAYzH,GACtB4D,gBAAiB8D,GAAmB1H,GACpCqC,YAAasF,GAAe3H,GAC5B6D,WAAY+D,GAAc5H,GAC1B8D,oBAAqB+D,GAAuB7H,MAIpB,CAACuC,ON2HL,SAACC,GAAD,OAAoB,SAAC4B,GAC1CD,EAAmBC,EAAU5B,EAAQL,EAASI,OAAO+F,KAAKnG,GAAW4B,KM5HnCtB,SN+HX,SAACD,GAAD,OAAoB,SAAC4B,GAC5CD,EAAmBC,EAAU5B,EAAQL,EAASM,SAAS6F,KAAKnG,GAAW6B,KMhI3BgE,aNuGjB,SAACO,EAAcjG,GAAf,8CAAoC,WAAO8B,GAAP,eAAAG,EAAA,6DAC/DH,EAASH,GAAiB,IAC1BG,EAPC,CACAtE,KA9IuB,yBA+IvBuC,YAKuBkG,IAFuC,SAI5CpG,EAASC,SAASmG,EAAMjG,GAJoB,OAIzDV,EAJyD,OAK/DwC,EAASH,GAAiB,IAC1BG,EAzDC,CACAtE,KAjGgB,kBAkGhB6D,MAuDiB/B,EAAKwB,QACvBgB,EA/CC,CACAtE,KA1G4B,8BA2G5B8D,gBA6C2BhC,EAAK4G,aAP8B,2CAApC,yDMtG3BC,KAFcL,CAGbN,I,yCCJaY,GA7CO,SAAAhK,GAAU,IAAD,EAEE6G,oBAAS,GAFX,mBAEvBoD,EAFuB,KAEbC,EAFa,OAGFrD,mBAAS7G,EAAMiE,QAHb,mBAGvBA,EAHuB,KAGfkG,EAHe,KAK9BC,qBAAU,WACTD,EAAUnK,EAAMiE,UACd,CAACjE,EAAMiE,SAiBV,OACC,8BACGgG,GACD,6BACC,0BAAMtK,UAAWC,KAAQqE,OACxBoG,cApBoB,WACpBrK,EAAMsK,SACTJ,GAAY,KAmBRlK,EAAMiE,QAAU,WAKnBgG,GACA,6BACC,2BAAOM,WAAW,EAAMC,OAtBD,WAC1BN,GAAY,GACZlK,EAAMyK,aAAaxG,IAoBoCyG,SAjBjC,SAACC,GACvBR,EAAUQ,EAAEC,OAAOC,QAgB8DA,MAAO5G,O,uCCE3E6G,GAFkBC,aAAU,CAAEC,KAAM,qBAAlBD,EAjCT,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,aAAczL,EAAY,EAAZA,MACjD,OACC,0BAAM0L,SAAUD,EAAcvL,UAAWC,KAAQ2E,aAC/C9E,GAAS,yBAAKE,UAAWyL,KAAMC,kBAC9B5L,GAGF,yBAAKE,UAAWC,KAAQ0L,iBACvB,0CADD,IACqBlL,aAAY,YAAa,WAAY,GAAID,KAAO,CAACiB,KAAM,UAE5E,yBAAKzB,UAAWC,KAAQ0L,iBACvB,kDADD,IAC6BlL,aAAY,GAAI,iBAAkB,GAAID,KAAO,CAAEiB,KAAM,cAElF,yBAAKzB,UAAWC,KAAQ0L,iBACvB,0CADD,IACqBlL,aAAY,cAAe,4BAA6B,GAAIL,OAEjF,yBAAKJ,UAAWC,KAAQ0L,iBACvB,yCADD,IACoBlL,aAAY,WAAY,UAAW,GAAIL,OAE1D,yBAAKJ,UAAWC,KAAQ0L,iBACxB,yCAAkBC,OAAOC,KAAKP,EAAQQ,UAAU3G,KAAI,SAAAwC,GACnD,OACC,yBAAKA,IAAKA,EAAK3H,UAAWC,KAAQ8L,SACjC,2BAAIpE,EAAJ,MADD,IACiBlH,aAAYkH,EAAK,YAAcA,EAAK,GAAInH,KAAO,CAACiB,KAAM,cAK1E,6BAAK,6CCsBFuK,GAAc,SAAC,GAAsC,IAApCV,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,QAASsB,EAAiB,EAAjBA,WACxC,OACC,yBAAKjM,UAAWC,KAAQ2E,aACvB,yBAAK5E,UAAWC,KAAQ0L,iBACvB,kDAA2BL,EAAQY,eAAiB,MAAQ,MAE5DZ,EAAQY,gBACR,yBAAKlM,UAAWC,KAAQ0L,iBACvB,0CAAmBL,EAAQa,2BAG7B,yBAAKnM,UAAWC,KAAQ0L,iBACvB,6BAAK,yCAAkBL,EAAQc,UAEhC,yBAAKpM,UAAWC,KAAQ0L,iBACvB,yCAAkBC,OAAOC,KAAKP,EAAQQ,UAAU3G,KAAI,SAAAwC,GACnD,OAAO,kBAAC,GAAD,CAASA,IAAKA,EAAK0E,aAAc1E,EAAK2E,aAAchB,EAAQQ,SAASnE,SAG7EgD,GAAW,6BAAK,4BAAQnD,QAASyE,GAAjB,WAKdM,GAAU,SAAC,GAAoC,IAAlCF,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAChC,OACC,yBAAKtM,UAAWC,KAAQ8L,SACvB,2BAAIM,EAAJ,MADD,IAC0BC,IAKbE,GAlFK,SAAC,GAAwE,IAAtElB,EAAqE,EAArEA,QAAShH,EAA4D,EAA5DA,OAAQwG,EAAoD,EAApDA,aAAcH,EAAsC,EAAtCA,QAAS8B,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAAkB,EAE3DxF,oBAAS,GAFkD,mBAEpFoD,EAFoF,KAE1EC,EAF0E,KAI3F,IAAKe,EACJ,OACC,yBAAKtL,UAAWC,KAAQ0M,gBACvB,kBAAC,GAAD,OAqBH,OACC,6BACC,yBAAK3M,UAAWC,KAAQ2M,WACvB,yBAAK5M,UAAWC,KAAQ4M,kBACvB,yBAAK1E,IAAKmD,EAAQlD,OAAO0E,OAAS5E,KAAWlI,UAAWC,KAAQ8M,UAAWzE,IAAI,SAC9EqC,GAAW,2BAAOlJ,KAAK,OAAOsJ,SArBP,SAACC,GACxBA,EAAEC,OAAO+B,MAAMnL,QAClB4K,EAAUzB,EAAEC,OAAO+B,MAAM,QAqBxB,yBAAKhN,UAAWC,KAAQgN,mBACvB,yBAAKjN,UAAWC,KAAQiN,MACvB,wBAAIlN,UAAWC,KAAQU,MAAO2K,EAAQ6B,UACtC,kBAAC,GAAD,CAAe7I,OAAQA,EAAQwG,aAAcA,EAAcH,QAASA,KAGpEL,EACA,kBAAC,GAAD,CAAiBgB,QAASA,EAAS8B,cAAe9B,EAASE,SApB/C,SAAC/G,GACjBiI,EAAYjI,GAAUpB,MAAK,WAC1BkH,GAAY,SAmBT,kBAAC,GAAD,CAAae,QAASA,EAASX,QAASA,EAASsB,WAzBnC,WAClB1B,GAAY,U,SCtBR8C,GAAW,mBAKXnM,GAAe,CACpBoM,MAAO,CACN,CAAElM,GAAI,EAAGE,QAAS,KAAMiM,WAAY,IACpC,CAAEnM,GAAI,EAAGE,QAAS,cAAeiM,WAAY,KAE9CjC,QAAS,KACThH,OAAQ,GACRkJ,YAAa,IA0DRhD,GAAY,SAAClG,GAAD,MAChB,CACA7C,KAtEiB,qBAuEjB6C,WAyBWmJ,GAAa,SAACtJ,GAAD,8CAAoB,WAAO4B,GAAP,eAAAG,EAAA,sEAC1B7B,EAAsBF,GADI,OACvCZ,EADuC,OAE7CwC,EAxCC,CACAtE,KA5DuB,2BA6DvB6J,QAsCuB/H,IAFqB,2CAApB,uDA4CXmK,GA7HQ,WAA0D,IAAzD/L,EAAwD,uDAAhDT,GAAcU,EAAkC,uCAC/E,OAAQA,EAAOH,MACd,KAAK4L,GACJ,IAAIM,EAAU,CACbvM,GAAIO,EAAM2L,MAAMzL,OAAS,EACzBP,QAASM,EAAO4L,YAChBD,WAAY,GAGb,OAAO,eACH5L,EADJ,CAEC2L,MAAM,GAAD,mBAAM3L,EAAM2L,OAAZ,CAAmBK,MAG1B,IA9BuB,2BA+BtB,OAAO,eACHhM,EADJ,CAEC2J,QAAS1J,EAAO0J,UAGlB,IAnCiB,qBAoChB,OAAO,eACH3J,EADJ,CAEC2C,OAAQ1C,EAAO0C,SAGjB,IAxCyB,6BAyCxB,OAAO,eACH3C,EADJ,CAEC2J,QAAQ,eAAM3J,EAAM2J,QAAb,CAAsBlD,OAAQxG,EAAOwG,WAG9C,QACC,OAAOzG,I,wCCpCKiM,GAdF,SAACvN,GACb,OACC,yBAAKL,UAAWC,KAAQmF,MACvB,yBAAKpF,UAAWC,KAAQ4N,SACvB,yBAAK1F,IAAKD,KAAWI,IAAI,SACxBjI,EAAMiB,SAER,yBAAKtB,UAAWC,KAAQ6N,OACvB,sCADD,IACmB,8BAAOzN,EAAMkN,e,kBCN7BQ,GAAYC,aAAiB,IAkBpBC,GAFU7C,aAAU,CAACC,KAAM,sBAAjBD,EAdL,SAAA/K,GACnB,OACC,0BAAMmL,SAAUnL,EAAMkL,cACrB,6BACC,kBAAC2C,GAAA,EAAD,CAAOvN,KAAK,cAAcE,UAAWT,KAAUM,YAAY,cAC1DK,SAAU,CAACgN,OAEb,6BACC,iDCYWI,GAtBCtE,IAAMuE,MAAK,YAAyB,IAAtBd,EAAqB,EAArBA,MAAOe,EAAc,EAAdA,QAE9BC,EAAgBhB,EACpBnI,KAAI,SAAAuC,GAAC,OAAI,kBAAC,GAAD,CAAMtG,GAAIsG,EAAEtG,GAAIuG,IAAKD,EAAEtG,GAAIE,QAASoG,EAAEpG,QAASiM,WAAY7F,EAAE6F,gBAMxE,OACC,yBAAKvN,UAAWC,KAAQsO,YACvB,wCACA,6BACC,kBAAC,GAAD,CAAkB/C,SARF,SAAA/G,GAClB4J,EAAQ5J,EAAS+I,iBAShB,yBAAKxN,UAAWC,KAAQqN,OACtBgB,OCXUtE,gBANS,SAAArI,GAAK,MAC3B,CACA2L,MAAO3L,EAAM6M,YAAYlB,SAIa,CAACe,QJqFlB,SAACb,GAAD,MACrB,CACA/L,KAAM4L,GACNG,iBIxFaxD,CAAoCmE,ICEpCM,GATC,SAAC,GAAsE,IAArEnD,EAAoE,EAApEA,QAAShH,EAA2D,EAA3DA,OAAQwG,EAAmD,EAAnDA,aAAcH,EAAqC,EAArCA,QAAS8B,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YACpE,OACC,iCACC,kBAAC,GAAD,CAAapB,QAASA,EAAShH,OAAQA,EAAQwG,aAAcA,EAAcH,QAASA,EAAS8B,UAAWA,EAAWC,YAAaA,IAChI,kBAACgC,GAAD,QCCGC,G,yLAEJ,IAAMxK,EAASyF,KAAKvJ,MAAM6B,MAAM0M,OAAOzK,QAAUyF,KAAKvJ,MAAMwO,iBAE5DjF,KAAKvJ,MAAMoN,WAAWtJ,GACtByF,KAAKvJ,MAAMyO,UAAU3K,K,0CAIrByF,KAAKmF,mB,yCAGaC,GACdpF,KAAKvJ,MAAM6B,MAAM0M,OAAOzK,SAAW6K,EAAU9M,MAAM0M,OAAOzK,QAC7DyF,KAAKmF,mB,+BAKN,OACC,kBAAC,GAAD,iBAAanF,KAAKvJ,MAAlB,CAAyBsK,SAAUf,KAAKvJ,MAAM6B,MAAM0M,OAAOzK,c,GApB/B0F,IAAMC,WAiCtBC,gBACdC,aATuB,SAAArI,GAAK,MAC3B,CACA2J,QAAS3J,EAAM6M,YAAYlD,QAC3BhH,OAAQ3C,EAAM6M,YAAYlK,OAC1BuK,iBAAkBlN,EAAMsN,KAAK9K,OAC7B+K,OAAQvN,EAAMsN,KAAKC,UAIK,CAACzB,cAAYqB,UNgEd,SAAC3K,GAAD,8CAAoB,WAAO4B,GAAP,eAAAG,EAAA,sEACzB7B,EAAqBF,GADI,OACtCZ,EADsC,OAE5CwC,EAASyE,GAAUjH,IAFyB,2CAApB,uDMhEyBuH,aNqEtB,SAACxG,GAAD,8CAAoB,WAAOyB,GAAP,SAAAG,EAAA,+EAE3B7B,EAAwBC,GAFG,OAItB,IAJsB,OAIrC6B,YACRJ,EAASyE,GAAUlG,IAL0B,uEAU5BD,EAAwBC,GAVI,QAWvB,IAXuB,OAWtC6B,YACRJ,EAASyE,GAAUlG,IAZ2B,yDAApB,uDMrEoCmI,UNqFvC,SAACjI,GAAD,8CAAgB,WAAOuB,GAAP,eAAAG,EAAA,sEACrB7B,EAAqBG,GADA,OAEhB,KADlBjB,EADkC,QAE/B4C,YACRJ,EA7CA,CACAtE,KAhFyB,6BAiFzB2G,OA2C0B7E,EAAKA,KAAK6E,SAHG,2CAAhB,uDMrFkDsE,YN4FhD,SAAC9H,GAAD,8CAA8B,WAAOmB,EAAeoJ,GAAtB,iBAAAjJ,EAAA,6DAClD/B,EAASgL,IAAWF,KAAK9K,OADyB,SAErCE,EAAuBO,GAFc,UAGhC,KADlBrB,EAFkD,QAG/C4C,WAH+C,gBAIvDJ,EAAS0H,GAAWtJ,IAJmC,8BAMvD4B,EAASqJ,aAAW,oBAAqB,CAAE,SAAW,eAAG7L,EAAKlC,SAAS,GAAGgO,MAAM,IAAK,GAAGC,cAAgB/L,EAAKlC,SAAS,OAN/D,kBAOhDkO,QAAQC,OAAOjM,EAAKlC,SAAS,KAPmB,4CAA9B,2DM3F1BoO,IACArF,KAHcL,CAIb4E,I,oBCtBae,GApBA,SAAC,GAA6B,IAA5BR,EAA2B,EAA3BA,OAAQS,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAC/B,OACC,4BAAQ5P,UAAWC,KAAQ4P,QAC1B,kBAAC,IAAD,CAAStN,GAAI,YACZ,yBAAKvC,UAAWC,KAAQ6P,KACvB3H,IAAI,2FACJG,IAAI,UAGN,yBAAKtI,UAAWC,KAAQ8P,YAEtBb,EACC,6BAAK,yBAAKlP,UAAWC,KAAQ0P,OAAQA,GAAY,4BAAQnI,QAASoI,GAAjB,YACjD,kBAAC,IAAD,CAASrN,GAAI,UAAb,YCXArB,GAAe,CACpBiD,OAAQ,KACRX,MAAO,KACPmM,MAAO,KACPT,QAAQ,EACRc,WAAY,MAoCPC,GAAkB,SAAC9L,EAAuBX,EAAsBmM,EAAsBT,GAApE,MACtB,CACAzN,KA9CoB,qBA+CpByO,QAAS,CAAE/L,SAAQX,QAAOmM,QAAOT,YAQ7BiB,GAAuB,SAACH,GAAD,MAC3B,CACAvO,KAxD8B,+BAyD9BuO,eAGWI,GAAkB,yDAAM,WAAOrK,GAAP,uBAAAG,EAAA,sEACjB/C,IADiB,OAEZ,KADlBI,EAD8B,QAE3B4C,aAAmB,EACA5C,EAAKA,KAAzBnC,EADmB,EACnBA,GAAIoC,EADe,EACfA,MAAOmM,EADQ,EACRA,MAClB5J,EAASkK,GAAgB7O,EAAIoC,EAAOmM,GAAO,KAJR,2CAAN,uDAqBlBU,GAAgB,yDAAM,WAAOtK,GAAP,iBAAAG,EAAA,sEACfrB,IADe,OAC5BtB,EAD4B,OAE5ByM,EAAazM,EAAK+M,IACxBvK,EAASoK,GAAqBH,IAHI,2CAAN,uDAadO,GAlFK,WAAiH,IAAhH5O,EAA+G,uDAAvGT,GAAcU,EAAyF,uCACnI,OAAQA,EAAOH,MACd,IAfoB,qBAgBnB,OAAO,eACHE,EADJ,GAEIC,EAAOsO,SAGZ,IApB8B,+BAqB7B,OAAO,eACHvO,EADJ,CAECqO,WAAYpO,EAAOoO,aAGrB,QACC,OAAOrO,IC1BJ6O,G,iLAEJ,OAAO,kBAAC,GAAW5G,KAAKvJ,W,GAFIwJ,IAAMC,WAYrBE,gBANS,SAAArI,GAAK,MAC3B,CACAuN,OAAQvN,EAAMsN,KAAKC,OACnBS,MAAOhO,EAAMsN,KAAKU,SAGoB,CAACC,OD0EnB,yDAAM,WAAO7J,GAAP,SAAAG,EAAA,sEACR/C,IADQ,OAEH,IAFG,OAElBgD,YACRJ,EAASkK,GAAgB,KAAM,KAAM,MAAM,IAHjB,2CAAN,wDC1EPjG,CAAmCwG,I,oBCc5CC,GAAiBrF,aAAU,CAAEC,KAAM,SAAlBD,EArBL,SAAC,GAAyC,IAAvCG,EAAsC,EAAtCA,aAAczL,EAAwB,EAAxBA,MAAOkQ,EAAiB,EAAjBA,WACzC,OACC,0BAAMxE,SAAUD,EAAcvL,UAAWC,KAAQyQ,WAC/CjQ,aAAY,QAAS,QAAS,CAACkQ,MAAWnQ,KAAO,CAAEiB,KAAM,SACzDhB,aAAY,WAAY,WAAY,CAACkQ,MAAWnQ,KAAO,CAAEiB,KAAM,aAC/DhB,aAAY,KAAM,aAAc,GAAID,KAAO,CAAEiB,KAAM,YAAc,eAEjEuO,GAAc,yBAAK7H,IAAK6H,EAAY1H,IAAI,YACxC0H,GAAcvP,aAAY,qBAAsB,UAAW,CAACkQ,MAAWnQ,KAAO,CAAEiB,KAAM,SAEtF3B,IAAUkQ,GAAc,yBAAKhQ,UAAWyL,KAAMC,kBAC7C5L,GAGF,yBAAKE,UAAWC,KAAQ2Q,iBACvB,8CAgCW5G,gBALS,SAAArI,GAAK,MAAK,CACjCqO,WAAYrO,EAAMsN,KAAKe,WACvBd,OAAQvN,EAAMsN,KAAKC,UAGoB,CAAES,MFerB,SAACnM,EAAeC,EAAkBC,EAAqBC,GAAvD,8CAA2E,WAAOoC,GAAP,iBAAAG,EAAA,sEAC5E/C,EAAcK,EAAOC,EAAUC,EAAYC,GADiC,OAEvE,KADlBJ,EADyF,QAEtF4C,WACRJ,EAASqK,OAEgB,KAApB7M,EAAK4C,YACRJ,EAASsK,MAEL/O,EAAUiC,EAAKlC,SAASQ,OAAS,EAAI0B,EAAKlC,SAAS,GAAK,aAC9D0E,EAASqJ,aAAW,QAAS,CAACyB,OAAQvP,MATwD,2CAA3E,wDEfN0I,EAxBD,SAAC,GAAmC,IAAjCkF,EAAgC,EAAhCA,OAAQS,EAAwB,EAAxBA,MAAOK,EAAiB,EAAjBA,WAK/B,OAAId,EACI,kBAAC,IAAD,CAAU3M,GAAI,aAIrB,yBAAKvC,UAAWC,KAAQ6Q,gBACvB,yBAAK9Q,UAAWC,KAAQ0P,OACvB,wBAAI3P,UAAWC,KAAQ8Q,YAAvB,SACA,kBAACN,GAAD,CAAgBjF,SAZF,SAAC/G,GACjBkL,EAAMlL,EAASjB,MAAOiB,EAAShB,SAAUgB,EAASf,WAAYe,EAASd,UAWjCqM,WAAYA,SC1C9C9O,GAAe,CACpB8P,aAAa,GAkCCC,GA7BI,WAAmF,IAAlFtP,EAAiF,uDAAzET,GAAcU,EAA2D,uCACpG,OAAQA,EAAOH,MACd,IAV0B,0BAWzB,OAAO,eACHE,EADJ,CAECqP,aAAa,IAGf,QACC,OAAOrP,I,8BCVJuP,GAAWC,aAAgB,CAChC3C,YAAad,GACb0D,YAAa1P,KACbyH,UAAW/C,EACX6I,KAAMsB,GACNlF,KAAMgG,KACNC,IAAKL,KAGAM,GAAmBxP,OAAOyP,sCAAwCzH,KAKzD0H,GAJDC,aAAYR,GAAUK,GAChCI,aAAgBC,QCNLC,GAXM,SAAA/H,GAEpB,OAAO,SAACzJ,GACP,OACC,kBAAC,WAAD,CAAUyR,SAAU,kBAAC,GAAD,OACnB,kBAAChI,EAAczJ,MCUb0R,GAAmBlI,IAAMmI,MAAK,kBAAM,iCAEpCC,G,2MACLC,wBAA0B,SAACC,GAC1BC,MAAMD,I,mFAINvI,KAAKvJ,MAAMgS,gBAEXtQ,OAAOuQ,iBAAiB,qBAAsB1I,KAAKsI,2B,6CAInDnQ,OAAOwQ,oBAAoB,qBAAsB3I,KAAKsI,2B,+BAItD,OAAKtI,KAAKvJ,MAAM2Q,YASf,yBAAKhR,UAAU,eAGd,yBAAKA,UAAU,sBACd,yBAAKA,UAAU,SACd,kBAAC,GAAD,QAMF,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,SAGd,yBAAKA,UAAU,sBACd,kBAAC,EAAD,OAKD,yBAAKA,UAAU,uBACd,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUwS,OAAK,EAACC,KAAK,IAAIlQ,GAAG,aAE5B,kBAAC,IAAD,CAAOmQ,KAAK,oBACXC,OAAQ,kBAAM,kBAAC,GAAD,SAEf,kBAAC,IAAD,CAAOD,KAAK,WACXC,OAAQd,GAAaE,MAEtB,kBAAC,IAAD,CAAOW,KAAK,SACXC,OAAQ,kBAAM,kBAAC,GAAD,SAEf,kBAAC,IAAD,CAAOD,KAAK,QAAQ7R,UAAW6B,IAC/B,kBAAC,IAAD,CAAOgQ,KAAK,SAAS7R,UAAW8B,IAChC,kBAAC,IAAD,CAAO+P,KAAK,YAAY7R,UAAW+B,IAEnC,kBAAC,IAAD,CAAO8P,KAAK,SACXC,OAAQ,kBAAM,kBAAC,GAAD,SAEf,kBAAC,IAAD,CAAOD,KAAK,IACXC,OAAQ,kBAAM,sDAjDnB,yBAAK3S,UAAU,gBACd,kBAAC,GAAD,W,GAnBa6J,IAAMC,WAqFlB8I,GAAgB7I,aACrB0F,IACAzF,aANuB,SAAArI,GAAK,MAAK,CACjCqP,YAAarP,EAAM2P,IAAIN,eAKE,CAAEqB,cH3EC,kBAAM,SAACtM,GACnBA,EAASqK,MACjB/M,MAAK,WACZ0C,EAPA,CACAtE,KA3B0B,mCGuGNsI,CAGpBkI,IAYaY,GAVC,SAAAxS,GACf,OACC,kBAAC,IAAD,CAAYyS,SAAUC,yBACrB,kBAAC,IAAD,CAAUtB,MAAOA,IAChB,kBAACmB,GAAD,SC3GJI,IAASL,OAAO,kBAAC,GAAD,MAAcM,SAASC,eAAe,ShC0HhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhQ,MAAK,SAAAiQ,GACjCA,EAAaC,iB,mBiClInBvS,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,UAAY,iCAAiC,iBAAmB,0C,mBCAxKD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,iBAAmB,+BAA+B,SAAW,uBAAuB,aAAe,6B,mBCDnLD,EAAOC,QAAU,IAA0B,kC,gCCA3C,oEAAO,IAAM0P,EAAW,SAAAzF,GACvB,IAAIA,EAEJ,MAAO,qBAGK8C,EAAmB,SAAAD,GAAS,OAAI,SAAA7C,GAC5C,GAAIA,GAASA,EAAMrJ,OAASkM,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNxC/M,EAAOC,QAAU,CAAC,UAAY,6BAA6B,oBAAsB,uCAAuC,oBAAsB,uCAAuC,oBAAsB,uCAAuC,sBAAwB,2C,mBCA1QD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,WAAa,0BAA0B,UAAY,yBAAyB,gBAAkB,iC,mBCA/JD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,2BAA2B,MAAQ,wB,4GCGxHuS,EAAkB,SAAA7R,GAAK,MAAK,CACjCuN,OAAQvN,EAAMsN,KAAKC,SAiBL9E,IAdU,SAAAN,GAAc,IAChC2J,EAD+B,iLAGnC,OAAK7J,KAAKvJ,MAAM6O,OAET,kBAACpF,EAAcF,KAAKvJ,OAFI,kBAAC,IAAD,CAAUkC,GAAI,eAHV,GACLsH,IAAMC,WAUtC,OAFmCE,YAAQwJ,EAARxJ,CAAyByJ,K,mBChB7DzS,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,aAAe,8B,mBCAhFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,0B","file":"static/js/main.f33488b2.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './FormsControls.module.scss';\nimport { Field } from 'redux-form';\n\n\nconst FormControl = ({ meta, children }) => {\n\tconst hasError = meta.error && meta.touched;\n\n\treturn (\n\t\t<div className={`${classes.formControl} ${hasError ? classes.error : ''}`}>\n\t\t\t<div>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t\t{hasError && <div className={classes.errorText}>{meta.error}</div>}\n\t\t</div>\n\t);\n};\n\nexport const Textarea = (props) => {\n\tconst { input, ...restProps } = props;\n\treturn (\n\t\t<FormControl {...restProps}><textarea {...input} {...restProps} /></FormControl>\n\t);\n};\n\nexport const Input = (props) => {\n\tconst { input, ...restProps } = props;\n\treturn (\n\t\t<FormControl {...restProps}><input {...input} {...restProps} /></FormControl>\n\t);\n};\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\n\treturn (\n\t\t<div>\n\t\t\t<Field\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tname={name}\n\t\t\t\tcomponent={component}\n\t\t\t\tvalidate={validators}\n\t\t\t\t{...props} /> {text}\n\t\t</div>\n\t);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloadWrapper\":\"ProfileInfo_preloadWrapper__O7As_\",\"descBlock\":\"ProfileInfo_descBlock__2HhTR\",\"descBlockLeftCol\":\"ProfileInfo_descBlockLeftCol__2beiZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__E2WaB\",\"descBlockRightCol\":\"ProfileInfo_descBlockRightCol__2CWh2\",\"head\":\"ProfileInfo_head__2L527\",\"name\":\"ProfileInfo_name__BDBmC\",\"profileDataItem\":\"ProfileInfo_profileDataItem__2f1zQ\",\"profileData\":\"ProfileInfo_profileData__12mUh\",\"contact\":\"ProfileInfo_contact__te2Ea\"};","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE'\n\ntype dialogType = {\n\tid: number\n\tname: string\n}\n\ntype messageType = {\n\tid: number\n\tmessage: string\n}\n\nconst initialState = {\n\tdialogs: [\n\t\t{id: 1, name: 'Danil'},\n\t\t{id: 2, name: 'Slava'},\n\t\t{id: 3, name: 'Maria'},\n\t\t{id: 4, name: 'Sasha'},\n\t\t{id: 5, name: 'Aleksey'},\n\t\t{id: 6, name: 'Vlad'}\n\t] as Array<dialogType>,\n\tmessages: [\n\t\t{id: 1, message: 'Hi'},\n\t\t{id: 2, message: 'How are you'},\n\t\t{id: 3, message: 'Yo!'},\n\t\t{id: 4, message: 'Yo!'},\n\t\t{id: 5, message: 'Yo!'}\n\t] as Array<messageType>\n}\n\ntype initialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: sendMessageActionType): initialStateType => {\n\tswitch (action.type) {\n\t\tcase SEND_MESSAGE:\n\t\t\tconst newMessage = {\n\t\t\t\tid: state.messages.length + 1,\n\t\t\t\tmessage: action.newMessage,\n\t\t\t}\n\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, newMessage],\n\t\t\t})\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\ntype sendMessageActionType = {\n\ttype: typeof SEND_MESSAGE\n\tnewMessage: string\n}\n\nexport const sendMessage = (newMessage: string): sendMessageActionType =>\n\t({\n\t\ttype: SEND_MESSAGE,\n\t\tnewMessage\n\t})\n\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/preloader.213e51e2.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__CNKtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__Y_Mn_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"navList\":\"Navbar_navList__2hxWr\",\"navListItem\":\"Navbar_navListItem__2E7VC\",\"active\":\"Navbar_active__21R_N\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport classes from './Navbar.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar = () => {\n\treturn (\n\t\t<nav className={classes.nav}>\n\t\t\t<ul className={classes.navList}>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink></li>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/dialogs' activeClassName={classes.active}>Messages</NavLink></li>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/users' activeClassName={classes.active}>Users</NavLink></li>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/news' activeClassName={classes.active}>News</NavLink></li>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/music' activeClassName={classes.active}>Music</NavLink></li>\n\t\t\t\t<li className={classes.navListItem}><NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink></li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default Navbar;","import React from 'react';\n// import classes from './News.module.css';\n\nconst News = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tNews\n\t\t</div>\n\t);\n};\n\nexport default News;","import React from 'react';\n// import classes from './Music.module.css';\n\nconst Music = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tMusic\n\t\t</div>\n\t);\n};\n\nexport default Music;","import React from 'react';\n// import classes from './Settings.module.css';\n\nconst Settings = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tSettings\n\t\t</div>\n\t);\n};\n\nexport default Settings;","import Axios from \"axios\";\n\nconst instance = Axios.create({\n\twithCredentials: true,\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\theaders: {\n\t\t'API-KEY': '84eace83-6993-4047-89dd-082bc11cda1c'\n\t}\n});\n\nexport const authAPI = {\n\n\tme() {\n\t\treturn instance.get('auth/me')\n\t\t\t.then(response => response.data)\n\t},\n\n\tlogin(email, password, rememberMe = false, captcha = null) {\n\t\treturn instance.post('auth/login', {email, password, rememberMe, captcha})\n\t\t\t.then(response => response.data)\n\t},\n\n\tlogout() {\n\t\treturn instance.delete('auth/login')\n\t\t\t.then(response => response.data)\n\t}\n};\n\nexport const usersAPI = {\n\n\tgetUsers(currentPage = 1, pageSize = 10) {\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => response.data)\n\t},\n\n\tfollow(userId) {\n\t\treturn instance.post(`follow/${userId}`)\n\t\t\t.then(response => response.data)\n\t},\n\n\tunfollow(userId) {\n\t\treturn instance.delete(`follow/${userId}`)\n\t\t\t.then(response => response.data)\n\t}\t\n};\n\nexport const profileAPI = {\n\n\tasync getProfile(userId) {\n\t\treturn instance.get(`profile/${userId}`)\n\t\t\t.then(response => response.data)\n\t},\n\n\tgetStatus(userId) {\n\t\treturn instance.get(`profile/status/${userId}`)\n\t\t\t.then(response => response.data);\n\t},\n\n\tupdateStatus(status) {\n\t\treturn instance.put(`profile/status/`, {status})\n\t\t\t.then(response => response.data);\n\t},\n\n\tsavePhoto(photo) {\n\t\tconst formData = new FormData();\n\t\tformData.append('image', photo);\n\n\t\treturn instance.put(`profile/photo/`, formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t})\n\t\t\t.then(response => response.data);\n\t},\n\n\tsaveProfile(profileData) {\n\t\treturn instance.put(`profile`, profileData)\n\t\t\t.then(response => response.data);\n\t}\n};\n\nexport const securityAPI = {\n\n\tgetCaptchaUrl() {\n\t\treturn instance.get('security/get-captcha-url')\n\t\t\t.then(response => response.data)\n\t},\n};","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\n\treturn items.map(item => {\n\t\tif (item[objPropName] === itemId) {\n\t\t\treturn {...item, ...newObjectProps};\n\t\t}\n\t\t\n\t\treturn item;\n\t})\n};","import { usersAPI } from \"../api/api\"\nimport { updateObjectInArray } from \"../utils/objectHelpers\"\nimport { userType } from \"../types/types\"\n\nconst FOLLOW = 'users/FOLLOW'\nconst UNFOLLOW = 'users/UNFOLLOW'\nconst SET_USERS = 'users/SET_USERS'\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\nconst TOGGLE_FOLLOWING_PROGRESS = 'users/TOGGLE_FOLLOWING_PROGRESS'\n\nconst initialState = {\n\tusers: [] as Array<userType>,\n\tpageSize: 12,\n\ttotalUsersCount: 0,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: [] as Array<number> // array of users ids\n}\n\ntype initialStateType = typeof initialState\n\nconst usersReducer = (state = initialState, action: any): initialStateType => {\n\tswitch (action.type) {\n\t\tcase FOLLOW:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n\t\t\t})\n\n\t\tcase UNFOLLOW:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n\t\t\t})\n\n\t\tcase SET_USERS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tusers: action.users\n\t\t\t})\n\n\t\tcase SET_CURRENT_PAGE:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.currentPage\n\t\t\t})\n\n\t\tcase SET_TOTAL_USERS_COUNT:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\ttotalUsersCount: action.totalUsersCount\n\t\t\t})\n\n\t\tcase TOGGLE_IS_FETCHING:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.isFetching\n\t\t\t})\n\n\t\tcase TOGGLE_FOLLOWING_PROGRESS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching ?\n\t\t\t\t\t[...state.followingInProgress, action.userId] :\n\t\t\t\t\t[state.followingInProgress.filter(id => id !== action.userId)]\n\t\t\t})\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\ntype followSuccessActionType = {\n\ttype: typeof FOLLOW\n\tuserId: number\n}\n\nconst followSuccess = (userId: number): followSuccessActionType =>\n\t({\n\t\ttype: FOLLOW,\n\t\tuserId\n\t})\n\ntype unfollowSuccessActionType = {\n\ttype: typeof UNFOLLOW\n\tuserId: number\n}\n\nconst unfollowSuccess = (userId: number): unfollowSuccessActionType =>\n\t({\n\t\ttype: UNFOLLOW,\n\t\tuserId\n\t})\n\ntype setUsersActionType = {\n\ttype: typeof SET_USERS\n\tusers: Array<userType>\n}\n\nconst setUsers = (users: Array<userType>): setUsersActionType =>\n\t({\n\t\ttype: SET_USERS,\n\t\tusers\n\t})\n\ntype setTotalUsersCountActionType = {\n\ttype: typeof SET_TOTAL_USERS_COUNT\n\ttotalUsersCount: number\n}\n\nconst setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountActionType =>\n\t({\n\t\ttype: SET_TOTAL_USERS_COUNT,\n\t\ttotalUsersCount\n\t})\n\ntype toggleIsFetchingActionType = {\n\ttype: typeof TOGGLE_IS_FETCHING\n\tisFetching: boolean\n}\n\nconst toggleIsFetching = (isFetching: boolean): toggleIsFetchingActionType =>\n\t({\n\t\ttype: TOGGLE_IS_FETCHING,\n\t\tisFetching\n\t})\n\ntype toggleFollowingProgressActionType = {\n\ttype: typeof TOGGLE_FOLLOWING_PROGRESS\n\tisFetching: boolean\n\tuserId: number\n}\n\nconst toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressActionType =>\n\t({\n\t\ttype: TOGGLE_FOLLOWING_PROGRESS,\n\t\tisFetching,\n\t\tuserId\n\t})\n\ntype setCurrentPageActionType = {\n\ttype: typeof SET_CURRENT_PAGE\n\tcurrentPage: number\n}\n\nexport const setCurrentPage = (currentPage: number): setCurrentPageActionType =>\n\t({\n\t\ttype: SET_CURRENT_PAGE,\n\t\tcurrentPage\n\t});\n\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\n\tdispatch(toggleIsFetching(true))\n\tdispatch(setCurrentPage(page))\n\n\tconst data = await usersAPI.getUsers(page, pageSize)\n\tdispatch(toggleIsFetching(false))\n\tdispatch(setUsers(data.items))\n\tdispatch(setTotalUsersCount(data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\n\tdispatch(toggleFollowingProgress(true, userId))\n\n\tconst data = await apiMethod(userId)\n\tif (data.resultCode === 0) {\n\t\tdispatch(actionCreator(userId))\n\t}\n\tdispatch(toggleFollowingProgress(false, userId))\n}\n\nexport const follow = (userId: number) => (dispatch: any) => {\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\n\nexport const unfollow = (userId: number) => (dispatch: any) => {\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n}\n\nexport default usersReducer","import React, { useState } from 'react';\nimport classes from './Paginator.module.scss';\nimport cn from 'classnames'; \n\n\nconst Paginator = ({\n\ttotalItemsCount,\n\tpageSize,\n\tcurrentPage,\n\tonPageChanged,\n\tportionSize = 10 }) => {\n\n\tconst pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n\tconst pages = [];\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i);\n\t}\n\n\tconst portionCount = Math.ceil(pagesCount / portionSize);\n\tconst [ portionNumber, setPortionNumber ] = useState(1);\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n\tconst rightPortionPageNumber = portionNumber * portionSize;\n\n\treturn (\n\t\t<div className={classes.paginator}>\n\t\t\t{portionNumber > 1 &&\n\t\t\t\t<button \n\t\t\t\t\tonClick={() => { setPortionNumber(portionNumber - 1) }}\n\t\t\t\t\tclassName={classes.paginatorPrevButton}>\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</button>}\n\n\t\t\t{\n\t\t\t\tpages\n\t\t\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n\t\t\t\t\t.map(p =>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tkey={p}\n\t\t\t\t\t\t\tclassName={cn(classes.paginatorPageNumber, {\n\t\t\t\t\t\t\t\t[classes.paginatorSelectedPage]: currentPage === p\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tonClick={() => { onPageChanged(p) }}>{p}</span>)\n\t\t\t}\n\n\t\t\t{portionCount > portionNumber &&\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => { setPortionNumber(portionNumber + 1) }}\n\t\t\t\t\tclassName={classes.paginatorNextButton}>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</button>}\n\t\t</div>\n\t);\n}\n\n\nexport default Paginator;","import React from 'react';\nimport userPhoto from '../../assets/images/user.png';\nimport classes from './User.module.scss';\nimport {NavLink} from 'react-router-dom';\n\n\t\nconst User = ({\n\tuser,\n\tfollow,\n\tunfollow,\n\tfollowingInProgress}) => {\n\n\treturn (\n\t\t\t\t\t<div className={classes.user}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className={classes.userPhoto}>\n\t\t\t\t\t\t\t\t<NavLink to={'/profile/' + user.id }>\n\t\t\t\t\t\t\t\t\t<img src={user.photos.small ? user.photos.small : userPhoto} alt='User' />\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.userFollowButton}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuser.followed ?\n\t\t\t\t\t\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tunfollow(user.id);\n\t\t\t\t\t\t\t\t\t\t}}>Unfollow</button> :\n\t\t\t\t\t\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tfollow(user.id);\n\t\t\t\t\t\t\t\t\t\t}}>Follow</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.userInfo}>\n\t\t\t\t\t\t\t<div className={classes.userInfoName}>{user.name}</div>\n\t\t\t\t\t\t\t<div>{user.status}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.userLocation}>\n\t\t\t\t\t\t\t<div>{\"user.location.country\"}</div>\n\t\t\t\t\t\t\t<div>{\"user.location.city\"}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t);\n}\n\n\nexport default User;","import React from 'react';\nimport classes from './Users.module.scss';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\n\nconst Users = ({\n\ttotalUsersCount,\n\tpageSize,\n\tcurrentPage,\n\tusers,\n\tfollow,\n\tunfollow,\n\tonPageChanged,\n\tfollowingInProgress }) => {\n\n\treturn (\n\t\t<div className={classes.usersContainer}>\n\t\t\t<Paginator\n\t\t\t\ttotalItemsCount={totalUsersCount}\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tonPageChanged={onPageChanged} />\n\t\t\t<div className={classes.usersWrapper}>\n\t\t\t\t{\n\t\t\t\t\tusers.map(u => <User key={u.id}\n\t\t\t\t\t\tuser={u}\n\t\t\t\t\t\tfollow={follow}\n\t\t\t\t\t\tunfollow={unfollow}\n\t\t\t\t\t\tfollowingInProgress={followingInProgress} />)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default Users;","import React from 'react';\nimport preloader from '../../../assets/images/preloader.gif';\nimport classes from './Preloader.module.scss';\n\n\nconst Preloader = () => {\n\treturn (\n\t\t<div className={classes.preloader} >\n\t\t\t<img src={preloader} alt='Preloader' />\n\t\t</div>\n\t);\n}\n\nexport default Preloader;","export const getUsers = state => {\n\treturn state.usersPage.users;\n};\n\nexport const getPageSize = state => {\n\treturn state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCount = state => {\n\treturn state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = state => {\n\treturn state.usersPage.currentPage;\n};\n\nexport const getIsFetching = state => {\n\treturn state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = state => {\n\treturn state.usersPage.followingInProgress;\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport { follow, unfollow, requestUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from './../../redux/users-selectors'\n\nclass UsersContainer extends React.Component {\n\tcomponentDidMount() {\n\t\tconst {requestUsers, currentPage, pageSize} = this.props;\n\t\trequestUsers(currentPage, pageSize);\n\t}\n\n\tonPageChanged = (pageNumber) => {\n\t\tconst {requestUsers, pageSize} = this.props;\n\t\trequestUsers(pageNumber, pageSize);\n\t}\n\n\trender() {\n\t\tif (this.props.isFetching) {\n\t\t\treturn <Preloader />;\n\t\t}\n\n\t\treturn <>\n\t\t\t{/* { this.props.isFetching ? <Preloader /> : null } */}\n\t\t\t<Users totalUsersCount={this.props.totalUsersCount}\n\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\tusers={this.props.users}\n\t\t\t\tfollow={this.props.follow}\n\t\t\t\tunfollow={this.props.unfollow}\n\t\t\t\tonPageChanged={this.onPageChanged}\n\t\t\t\tfollowingInProgress={this.props.followingInProgress} />\n\t\t\t</>\n\t}\n}\n\nconst mapStateToProps = state =>\n\t({\n\t\tusers: getUsers(state),\n\t\tpageSize: getPageSize(state),\n\t\ttotalUsersCount: getTotalUsersCount(state),\n\t\tcurrentPage: getCurrentPage(state),\n\t\tisFetching: getIsFetching(state),\n\t\tfollowingInProgress: getFollowingInProgress(state)\n\t});\n\nexport default compose(\n\tconnect(mapStateToProps, {follow, unfollow, requestUsers}),\n\twithAuthRedirect\n)(UsersContainer);","import React, { useState, useEffect } from 'react'\nimport classes from './ProfileStatus.module.scss'\n\nconst ProfileStatus = props => {\n\n\tconst [editMode, setEditMode] = useState(false)\n\tconst [status, setStatus] = useState(props.status)\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tif (props.isOwner) {\n\t\t\tsetEditMode(true)\n\t\t}\n\t}\n\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false)\n\t\tprops.updateStatus(status)\n\t}\n\n\tconst onStatusChange = (e) => {\n\t\tsetStatus(e.target.value)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{!editMode &&\n\t\t\t\t<div>\n\t\t\t\t\t<span className={classes.status}\n\t\t\t\t\t\tonDoubleClick={activateEditMode}>\n\t\t\t\t\t\t{props.status || \"------\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{editMode &&\n\t\t\t\t<div>\n\t\t\t\t\t<input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n\n};\n\nexport default ProfileStatus","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport classes from './ProfileInfo.module.scss';\nimport style from './../../common/FormsControls/FormsControls.module.scss'\n\n\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.profileData}>\n\t\t\t{error && <div className={style.formSummaryError}>\n\t\t\t\t{error}\n\t\t\t</div>\n\t\t\t}\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Full name: </b> {createField('Full name', 'fullName', [], Input, {type: 'text'})}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Looking for a job: </b> {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>My skills: </b> {createField('Description', 'lookingForAJobDescription', [], Textarea)}\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>About me: </b> {createField('About me', 'aboutMe', [], Textarea)}\n\t\t\t</div>\n\t\t\t{<div className={classes.profileDataItem}>\n\t\t\t\t<b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={key} className={classes.contact}>\n\t\t\t\t\t\t\t<b>{key}: </b> {createField(key, 'contacts.' + key, [], Input, {type: 'text'})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>}\n\t\t\t<div><button>Save</button></div>\n\t\t</form>\n\t);\n}\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile-data' })(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport classes from './ProfileInfo.module.scss';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n\n\tconst [editMode, setEditMode] = useState(false);\n\n\tif (!profile) {\n\t\treturn (\n\t\t\t<div className={classes.preloadWrapper}>\n\t\t\t\t<Preloader />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst onMainPhotoSelected = (e) => {\n\t\tif (e.target.files.length) {\n\t\t\tsavePhoto(e.target.files[0]);\n\t\t}\n\t}\n\n\tconst toEditMode = () => {\n\t\tsetEditMode(true);\n\t}\n\n\tconst onSubmit = (formData) => {\n\t\tsaveProfile(formData).then(() => {\n\t\t\tsetEditMode(false);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.descBlock}>\n\t\t\t\t<div className={classes.descBlockLeftCol}>\n\t\t\t\t\t<img src={profile.photos.large || userPhoto} className={classes.mainPhoto} alt='User' />\n\t\t\t\t\t{isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.descBlockRightCol}>\n\t\t\t\t\t<div className={classes.head}>\n\t\t\t\t\t\t<h1 className={classes.name}>{profile.fullName}</h1>\n\t\t\t\t\t\t<ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{editMode ?\n\t\t\t\t\t\t<ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit} /> :\n\t\t\t\t\t\t<ProfileData profile={profile} isOwner={isOwner} toEditMode={toEditMode} />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ProfileData = ({ profile, isOwner, toEditMode }) => {\n\treturn (\n\t\t<div className={classes.profileData}>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Looking for a job: </b>{profile.lookingForAJob ? 'Yes' : 'No'}\n\t\t\t</div>\n\t\t\t{profile.lookingForAJob &&\n\t\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t\t<b>My skills: </b>{profile.lookingForAJobDescription}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<div><b>About me: </b>{profile.aboutMe}</div>\n\t\t\t</div>\n\t\t\t<div className={classes.profileDataItem}>\n\t\t\t\t<b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\n\t\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{isOwner && <div><button onClick={toEditMode}>Edit</button></div>}\n\t\t</div>\n\t);\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n\treturn (\n\t\t<div className={classes.contact}>\n\t\t\t<b>{contactTitle}: </b> {contactValue}\n\t\t</div>\n\t);\n}\n\nexport default ProfileInfo;","import { profileAPI } from \"../api/api\"\nimport { stopSubmit } from \"redux-form\"\nimport { postType, profileType, photosType } from \"../types/types\"\n\nconst ADD_POST = 'profile/ADD-POST'\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\nconst SET_STATUS = 'profile/SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS'\n\nconst initialState = {\n\tposts: [\n\t\t{ id: 1, message: 'Hi', likesCount: 12 },\n\t\t{ id: 2, message: 'How are you', likesCount: 11 },\n\t] as Array<postType>,\n\tprofile: null as profileType | null,\n\tstatus: '',\n\tnewPostText: ''\n}\n\ntype initialStateType = typeof initialState\n\nconst profileReducer = (state = initialState, action: any): initialStateType => {\n\tswitch (action.type) {\n\t\tcase ADD_POST:\n\t\t\tlet newPost = {\n\t\t\t\tid: state.posts.length + 1,\n\t\t\t\tmessage: action.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t}\n\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, newPost]\n\t\t\t})\n\n\t\tcase SET_USER_PROFILE:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile\n\t\t\t})\n\n\t\tcase SET_STATUS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t})\n\n\t\tcase SAVE_PHOTO_SUCCESS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tprofile: { ...state.profile, photos: action.photos } as profileType\n\t\t\t})\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\ntype setUserProfileActionType = {\n\ttype: typeof SET_USER_PROFILE\n\tprofile: profileType\n}\n\nconst setUserProfile = (profile: profileType): setUserProfileActionType =>\n\t({\n\t\ttype: SET_USER_PROFILE,\n\t\tprofile\n\t})\n\ntype setStatusActionType = {\n\ttype: typeof SET_STATUS\n\tstatus: string\n}\n\nconst setStatus = (status: string): setStatusActionType =>\n\t({\n\t\ttype: SET_STATUS,\n\t\tstatus\n\t})\n\ntype savePhotoSuccessActionType = {\n\ttype: typeof SAVE_PHOTO_SUCCESS\n\tphotos: photosType\n}\n\nconst savePhotoSuccess = (photos: photosType): savePhotoSuccessActionType =>\n\t({\n\t\ttype: SAVE_PHOTO_SUCCESS,\n\t\tphotos\n\t})\n\ntype addPostActionType = {\n\ttype: typeof ADD_POST\n\tnewPostText: string\n}\n\nexport const addPost = (newPostText: string): addPostActionType =>\n\t({\n\t\ttype: ADD_POST,\n\t\tnewPostText\n\t})\n\nexport const getProfile = (userId: number) => async (dispatch: any) => {\n\tconst data = await profileAPI.getProfile(userId)\n\tdispatch(setUserProfile(data))\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n\tconst data = await profileAPI.getStatus(userId)\n\tdispatch(setStatus(data))\n}\n\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n\ttry {\n\t\tconst data = await profileAPI.updateStatus(status)\n\n\t\tif (data.resultCode === 0) {\n\t\t\tdispatch(setStatus(status))\n\t\t}\n\t} catch (error) {\n\t\t// handle error\n\t}\n\tconst data = await profileAPI.updateStatus(status);\n\tif (data.resultCode === 0) {\n\t\tdispatch(setStatus(status))\n\t}\n}\n\nexport const savePhoto = (photo: any) => async (dispatch: any) => {\n\tconst data = await profileAPI.savePhoto(photo)\n\tif (data.resultCode === 0) {\n\t\tdispatch(savePhotoSuccess(data.data.photos))\n\t}\n}\n\nexport const saveProfile = (profileData: profileType) => async (dispatch: any, getState: any) => {\n\tconst userId = getState().auth.userId\n\tconst data = await profileAPI.saveProfile(profileData)\n\tif (data.resultCode === 0) {\n\t\tdispatch(getProfile(userId))\n\t} else {\n\t\tdispatch(stopSubmit('edit-profile-data', { \"contacts\": {[data.messages[0].slice(30, -1).toLowerCase()]: data.messages[0]} }))\n\t\treturn Promise.reject(data.messages[0])\n\t}\n}\n\nexport default profileReducer","import React from 'react';\nimport classes from './Post.module.scss';\nimport userPhoto from './../../../../assets/images/user.png'\n\nconst Post = (props) => {\n\treturn (\n\t\t<div className={classes.item}>\n\t\t\t<div className={classes.wrapper}>\n\t\t\t\t<img src={userPhoto} alt='User' />\n\t\t\t\t{props.message}\n\t\t\t</div>\n\t\t\t<div className={classes.likes}>\n\t\t\t\t<span>like</span> <span>{props.likesCount}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\n\n\nconst maxLength = maxLengthCreator(10);\n\nconst AddPostForm = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field name=\"newPostText\" component={Textarea} placeholder=\"What's new?\"\n\t\t\t\t\tvalidate={[maxLength]} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst NewPostReduxForm = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\n\nexport default NewPostReduxForm;","import React from 'react';\nimport classes from './MyPosts.module.scss';\nimport Post from './Post/Post';\nimport NewPostReduxForm from './AddPostForm/AddPostForm';\n\n\nconst MyPosts = React.memo(({ posts, addPost }) => {\n\n\tconst postsElements = posts\n\t\t.map(p => <Post id={p.id} key={p.id} message={p.message} likesCount={p.likesCount} />);\n\n\tconst addNewPost = formData => {\n\t\taddPost(formData.newPostText);\n\t};\n\n\treturn (\n\t\t<div className={classes.postsBlock}>\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<NewPostReduxForm onSubmit={addNewPost} />\n\t\t\t</div>\n\t\t\t<div className={classes.posts}>\n\t\t\t\t{postsElements}\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default MyPosts;","import { addPost } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state =>\n\t({\n\t\tposts: state.profilePage.posts\n\t});\n\n\nexport default connect(mapStateToProps, {addPost})(MyPosts);","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\treturn (\n\t\t<section>\n\t\t\t<ProfileInfo profile={profile} status={status} updateStatus={updateStatus} isOwner={isOwner} savePhoto={savePhoto} saveProfile={saveProfile} />\n\t\t\t<MyPostsContainer />\n\t\t</section>\n\t);\n};\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\trefreshProfile() {\n\t\tconst userId = this.props.match.params.userId || this.props.authorizedUserId;\n\n\t\tthis.props.getProfile(userId);\n\t\tthis.props.getStatus(userId)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\n\t\t\tthis.refreshProfile();\n\t\t}\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Profile {...this.props} isOwner={!this.props.match.params.userId} />\n\t\t);\n\t}\n};\n\nconst mapStateToProps = state =>\n\t({\n\t\tprofile: state.profilePage.profile,\n\t\tstatus: state.profilePage.status,\n\t\tauthorizedUserId: state.auth.userId,\n\t\tisAuth: state.auth.isAuth\n\t});\n\nexport default compose(\n\tconnect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer);","import React from 'react';\nimport classes from './Header.module.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = ({isAuth, login, logout}) => {\n\treturn (\n\t\t<header className={classes.header}>\n\t\t\t<NavLink to={'/profile'}>\n\t\t\t\t<img className={classes.logo}\n\t\t\t\t\tsrc='https://www.doodle.tj/wp-content/uploads/2019/06/xreact2.png.pagespeed.ic.cFqX4FyKm1.png'\n\t\t\t\t\talt='Logo' />\n\t\t\t</NavLink>\n\n\t\t\t<div className={classes.loginBlock}>\n\t\t\t\t{\n\t\t\t\t\tisAuth ?\n\t\t\t\t\t\t<div><div className={classes.login}>{login}</div><button onClick={logout}>Log out</button></div> :\n\t\t\t\t\t\t<NavLink to={'/login'}>Login</NavLink>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;","import { authAPI, securityAPI } from \"../api/api\"\nimport { stopSubmit } from \"redux-form\"\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS'\n\nconst initialState = {\n\tuserId: null as number | null,\n\temail: null as string | null,\n\tlogin: null as string | null,\n\tisAuth: false,\n\tcaptchaUrl: null as string | null // if null, then captcha url is not required\n}\n\ntype initialStateType = typeof initialState\n\nconst authReducer = (state = initialState, action: setAuthUserDataActionType | getCaptchaUrlSuccessActionType): initialStateType => {\n\tswitch (action.type) {\n\t\tcase SET_USER_DATA:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t})\n\n\t\tcase GET_CAPTCHA_URL_SUCCESS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tcaptchaUrl: action.captchaUrl,\n\t\t\t})\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\ntype setAuthUserDataActionPayloadType = {\n\tuserId: number | null\n\temail: string | null\n\tlogin: string | null\n\tisAuth: boolean\n}\n\ntype setAuthUserDataActionType = {\n\ttype: typeof SET_USER_DATA\n\tpayload: setAuthUserDataActionPayloadType\n}\n\nconst setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataActionType =>\n\t({\n\t\ttype: SET_USER_DATA,\n\t\tpayload: { userId, email, login, isAuth }\n\t})\n\ntype getCaptchaUrlSuccessActionType = {\n\ttype: typeof GET_CAPTCHA_URL_SUCCESS\n\tcaptchaUrl: string\n}\n\nconst getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType =>\n\t({\n\t\ttype: GET_CAPTCHA_URL_SUCCESS,\n\t\tcaptchaUrl\n\t})\n\nexport const getAuthUserData = () => async (dispatch: any) => {\n\tconst data = await authAPI.me()\n\tif (data.resultCode === 0) {\n\t\tconst {id, email, login} = data.data\n\t\tdispatch(setAuthUserData(id, email, login, true))\n\t}\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\n\tconst data = await authAPI.login(email, password, rememberMe, captcha)\n\tif (data.resultCode === 0) {\n\t\tdispatch(getAuthUserData())\n\t} else {\n\t\t\tif (data.resultCode === 10) {\n\t\t\t\tdispatch(getCaptchaUrl())\n\t\t\t}\n\t\tconst message = data.messages.length > 0 ? data.messages[0] : 'Some error'\n\t\tdispatch(stopSubmit('login', {_error: message}))\n\t}\n}\n\nexport const getCaptchaUrl = () => async (dispatch: any) => {\n\tconst data = await securityAPI.getCaptchaUrl()\n\tconst captchaUrl = data.url\n\tdispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout = () => async (dispatch: any) => {\n\tconst data = await authAPI.logout()\n\tif (data.resultCode === 0) {\n\t\tdispatch(setAuthUserData(null, null, null, false))\n\t}\n}\n\nexport default authReducer","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n\trender() {\n\t\treturn <Header {...this.props} />\n\t}\n};\n\nconst mapStateToProps = state =>\n\t({\n\t\tisAuth: state.auth.isAuth,\n\t\tlogin: state.auth.login\n\t});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { Input, createField } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport style from './../common/FormsControls/FormsControls.module.scss'\nimport classes from './Login.module.scss';\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.loginForm}>\n\t\t\t{createField('Email', 'email', [required], Input, { type: 'text' })}\n\t\t\t{createField('Password', 'password', [required], Input, { type: 'password' })}\n\t\t\t{createField(null, 'rememberMe', [], Input, { type: 'checkbox' }, 'Remember me')}\n\n\t\t\t{captchaUrl && <img src={captchaUrl} alt='captcha' />}\n\t\t\t{captchaUrl && createField('Symbols from image', 'captcha', [required], Input, { type: 'text' })}\n\n\t\t\t{error && !captchaUrl && <div className={style.formSummaryError}>\n\t\t\t\t{error}\n\t\t\t</div>\n\t\t\t}\n\t\t\t<div className={classes.loginFormButton}>\n\t\t\t\t<button>Login</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\n\nconst Login = ({ isAuth, login, captchaUrl }) => {\n\tconst onSubmit = (formData) => {\n\t\tlogin(formData.email, formData.password, formData.rememberMe, formData.captcha);\n\t}\n\n\tif (isAuth) {\n\t\treturn <Redirect to={'/profile'} />\n\t}\n\n\treturn (\n\t\t<div className={classes.loginContainer}>\n\t\t\t<div className={classes.login}>\n\t\t\t\t<h1 className={classes.loginTitle}>Login</h1>\n\t\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tcaptchaUrl: state.auth.captchaUrl,\n\tisAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from \"./auth-reducer\"\n\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\n\nconst initialState = {\n\tinitialized: false\n}\n\ntype initialStateType = typeof initialState\n\nconst appReducer = (state = initialState, action: InitializedSuccessActionType): initialStateType => {\n\tswitch (action.type) {\n\t\tcase INITIALIZED_SUCCESS:\n\t\t\treturn ({\n\t\t\t\t...state,\n\t\t\t\tinitialized: true\n\t\t\t})\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n};\n\ntype InitializedSuccessActionType = {\n\ttype: typeof INITIALIZED_SUCCESS\n}\n\nconst setInitializedSuccess = (): InitializedSuccessActionType => \n\t({\n\t\ttype: INITIALIZED_SUCCESS\n\t})\n\nexport const initializeApp = () => (dispatch: any) => {\n\tconst promise = dispatch(getAuthUserData())\n\tpromise.then(() => {\n\t\tdispatch(setInitializedSuccess())\n\t})\n}\n\nexport default appReducer","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nconst reducers = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tusersPage: usersReducer,\n\tauth: authReducer,\n\tform: formReducer,\n\tapp: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  ));\n\nexport default store;","import React, { Suspense } from 'react';\nimport Preloader from '../components/common/Preloader/Preloader';\n\nconst withSuspense = Component => {\n\n\treturn (props) => {\n\t\treturn (\n\t\t\t<Suspense fallback={<Preloader />}>\n\t\t\t\t<Component {...props} />\n\t\t\t</Suspense>\n\t\t);\n\t}\n}\n\nexport default withSuspense;","import React from 'react';\nimport './App.scss';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { HashRouter, Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { Provider, connect } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/store';\nimport withSuspense from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends React.Component {\n\tcatchAllUnhandledErrors = (promiseRejectionEvent) => {\n\t\talert(promiseRejectionEvent);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp();\n\n\t\twindow.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn (\n\t\t\t\t<div className=\"appPreloader\">\n\t\t\t\t\t<Preloader />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='app-wrapper'>\n\n\t\t\t\t{/* header */}\n\t\t\t\t<div className='app-wrapper-header'>\n\t\t\t\t\t<div className='inner'>\n\t\t\t\t\t\t<HeaderContainer />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* / header */}\n\n\t\t\t\t{/* main */}\n\t\t\t\t<div className='app-wrapper-main'>\n\t\t\t\t\t<div className='inner'>\n\n\t\t\t\t\t\t{/* navbar */}\n\t\t\t\t\t\t<div className='app-wrapper-navbar'>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* / navbar */}\n\n\t\t\t\t\t\t{/* content */}\n\t\t\t\t\t\t<div className='app-wrapper-content'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Redirect exact from='/' to='/profile' />\n\n\t\t\t\t\t\t\t\t<Route path='/profile/:userId?'\n\t\t\t\t\t\t\t\t\trender={() => <ProfileContainer />} />\n\n\t\t\t\t\t\t\t\t<Route path='/dialogs'\n\t\t\t\t\t\t\t\t\trender={withSuspense(DialogsContainer)} />\n\n\t\t\t\t\t\t\t\t<Route path='/users'\n\t\t\t\t\t\t\t\t\trender={() => <UsersContainer />} />\n\n\t\t\t\t\t\t\t\t<Route path='/news' component={News} />\n\t\t\t\t\t\t\t\t<Route path='/music' component={Music} />\n\t\t\t\t\t\t\t\t<Route path='/settings' component={Settings} />\n\n\t\t\t\t\t\t\t\t<Route path='/login'\n\t\t\t\t\t\t\t\t\trender={() => <Login />} />\n\n\t\t\t\t\t\t\t\t<Route path='*'\n\t\t\t\t\t\t\t\t\trender={() => <div>404 NOT FOUND</div>} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* / content */}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* / main */}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tinitialized: state.app.initialized\n});\n\nconst AppWithRouter = compose(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp })\n)(App);\n\nconst MainApp = props => {\n\treturn (\n\t\t<HashRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<AppWithRouter />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t);\n};\n\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport MainApp from './App';\n\n\nReactDOM.render(<MainApp /> , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"errorText\":\"FormsControls_errorText__2AH-C\",\"formSummaryError\":\"FormsControls_formSummaryError__Wift6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1Bxqa\",\"userPhoto\":\"User_userPhoto__3mwGu\",\"userFollowButton\":\"User_userFollowButton__1_UP8\",\"userInfo\":\"User_userInfo__1SfqK\",\"userInfoName\":\"User_userInfoName__1lqcm\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","export const required = value => {\n\tif (value) return undefined;\n\n\treturn 'Field is required';\n};\n\nexport const maxLengthCreator = maxLength => value => {\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n\treturn undefined;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3C8hn\",\"paginatorPrevButton\":\"Paginator_paginatorPrevButton__2F6vb\",\"paginatorNextButton\":\"Paginator_paginatorNextButton__Znx-P\",\"paginatorPageNumber\":\"Paginator_paginatorPageNumber__jEt3x\",\"paginatorSelectedPage\":\"Paginator_paginatorSelectedPage__3eUtV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3Scu4\",\"loginTitle\":\"Login_loginTitle__2PX3a\",\"loginForm\":\"Login_loginForm__32H5B\",\"loginFormButton\":\"Login_loginFormButton__3V3mP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"logo\":\"Header_logo__3T0lc\",\"loginBlock\":\"Header_loginBlock__3g_eP\",\"login\":\"Header_login__2sv5i\"};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n\tisAuth: state.auth.isAuth\n});\n\nconst withAuthRedirect = Component => {\n\tclass RedirectComponent extends React.Component {\n\t\trender() {\n\t\t\tif (!this.props.isAuth) return <Redirect to={'/login'} />;\n\n\t\t\treturn <Component {...this.props} />;\n\t\t}\n\t}\n\n\tconst ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n\treturn ConnectedRedirectComponent;\n}\n\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\",\"wrapper\":\"Post_wrapper__1Cl7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__3zKO4\",\"usersWrapper\":\"Users_usersWrapper__343ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cAL4\",\"posts\":\"MyPosts_posts__1P0sL\"};"],"sourceRoot":""}